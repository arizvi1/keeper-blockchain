{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data1",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes20",
						"name": "btcAddr",
						"type": "bytes20"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "claimToAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"name": "Claim",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data1",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data2",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "senderAddr",
						"type": "address"
					}
				],
				"name": "ClaimAssist",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "updaterAddr",
						"type": "address"
					}
				],
				"name": "DailyDataUpdate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint40",
						"name": "stakeId",
						"type": "uint40"
					}
				],
				"name": "ShareRateChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data1",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "stakerAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint40",
						"name": "stakeId",
						"type": "uint40"
					}
				],
				"name": "StakeEnd",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data1",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "stakerAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint40",
						"name": "stakeId",
						"type": "uint40"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "senderAddr",
						"type": "address"
					}
				],
				"name": "StakeGoodAccounting",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "stakerAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint40",
						"name": "stakeId",
						"type": "uint40"
					}
				],
				"name": "StakeStart",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "memberAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"name": "XfLobbyEnter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "data0",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "memberAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"name": "XfLobbyExit",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "CLAIM_PHASE_DAYS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "FLUSH_ADDR",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "HEARTS_PER_SATOSHI",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "enterDay",
						"type": "uint256"
					}
				],
				"name": "_waasLobby",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "waasLobby",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allocatedSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rawSatoshis",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "proof",
						"type": "bytes32[]"
					},
					{
						"internalType": "address",
						"name": "claimToAddr",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyY",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "claimFlags",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "autoStakeDays",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"name": "btcAddressClaim",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "",
						"type": "bytes20"
					}
				],
				"name": "btcAddressClaims",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "btcAddr",
						"type": "bytes20"
					},
					{
						"internalType": "uint256",
						"name": "rawSatoshis",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "proof",
						"type": "bytes32[]"
					}
				],
				"name": "btcAddressIsClaimable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes20",
						"name": "btcAddr",
						"type": "bytes20"
					},
					{
						"internalType": "uint256",
						"name": "rawSatoshis",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "proof",
						"type": "bytes32[]"
					}
				],
				"name": "btcAddressIsValid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "enterDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "entryIndex",
						"type": "uint256"
					}
				],
				"name": "calculateEntryId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "claimToAddr",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "claimParamHash",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyY",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "claimFlags",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "claimMessageMatchesSignature",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "contractOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "currentDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dailyData",
				"outputs": [
					{
						"internalType": "uint72",
						"name": "dayPayoutTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint72",
						"name": "dayStakeSharesTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint56",
						"name": "dayUnclaimedSatoshisTotal",
						"type": "uint56"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "beginDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endDay",
						"type": "uint256"
					}
				],
				"name": "dailyDataRange",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "list",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "beforeDay",
						"type": "uint256"
					}
				],
				"name": "dailyDataUpdate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "_lockedHeartsTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_nextStakeSharesTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_shareRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_stakePenaltyTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_dailyDataCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_stakeSharesTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint40",
								"name": "_latestStakeId",
								"type": "uint40"
							},
							{
								"internalType": "uint256",
								"name": "_unclaimedSatoshisTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_claimedSatoshisTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_claimedBtcAddrCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_currentDay",
								"type": "uint256"
							}
						],
						"internalType": "struct IGlobals.GlobalsCache",
						"name": "g",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "_lockedHeartsTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_nextStakeSharesTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_shareRate",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_stakePenaltyTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_dailyDataCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_stakeSharesTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint40",
								"name": "_latestStakeId",
								"type": "uint40"
							},
							{
								"internalType": "uint256",
								"name": "_unclaimedSatoshisTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_claimedSatoshisTotal",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_claimedBtcAddrCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_currentDay",
								"type": "uint256"
							}
						],
						"internalType": "struct IGlobals.GlobalsCache",
						"name": "gSnapshot",
						"type": "tuple"
					}
				],
				"name": "getGlobalsLoad",
				"outputs": [],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTreasureBoxAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "globalInfo",
				"outputs": [
					{
						"internalType": "uint256[13]",
						"name": "",
						"type": "uint256[13]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "globals",
				"outputs": [
					{
						"internalType": "uint72",
						"name": "lockedHeartsTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint72",
						"name": "nextStakeSharesTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint40",
						"name": "shareRate",
						"type": "uint40"
					},
					{
						"internalType": "uint72",
						"name": "stakePenaltyTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint16",
						"name": "dailyDataCount",
						"type": "uint16"
					},
					{
						"internalType": "uint72",
						"name": "stakeSharesTotal",
						"type": "uint72"
					},
					{
						"internalType": "uint40",
						"name": "latestStakeId",
						"type": "uint40"
					},
					{
						"internalType": "uint128",
						"name": "claimStats",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "merkleLeaf",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32[]",
						"name": "proof",
						"type": "bytes32[]"
					}
				],
				"name": "merkleProofIsValid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_contractAddress",
						"type": "address"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "pubKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyY",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "claimFlags",
						"type": "uint8"
					}
				],
				"name": "pubKeyToBtcAddress",
				"outputs": [
					{
						"internalType": "bytes20",
						"name": "",
						"type": "bytes20"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "pubKeyX",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "pubKeyY",
						"type": "bytes32"
					}
				],
				"name": "pubKeyToEthAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_treasureBoxAddress",
						"type": "address"
					}
				],
				"name": "setTreasureBoxAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "stakerAddr",
						"type": "address"
					}
				],
				"name": "stakeCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint40",
						"name": "stakeIdParam",
						"type": "uint40"
					}
				],
				"name": "stakeEnd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "stakerAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stakeIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint40",
						"name": "stakeIdParam",
						"type": "uint40"
					}
				],
				"name": "stakeGoodAccounting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stakeLists",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "stakeId",
						"type": "uint40"
					},
					{
						"internalType": "uint72",
						"name": "stakedHearts",
						"type": "uint72"
					},
					{
						"internalType": "uint72",
						"name": "stakeShares",
						"type": "uint72"
					},
					{
						"internalType": "uint16",
						"name": "lockedDay",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "stakedDays",
						"type": "uint16"
					},
					{
						"internalType": "uint16",
						"name": "unlockedDay",
						"type": "uint16"
					},
					{
						"internalType": "bool",
						"name": "isAutoStake",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newStakedHearts",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newStakedDays",
						"type": "uint256"
					}
				],
				"name": "stakeStart",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferKeeper",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "treasureBoxAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "xfLobby",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"name": "xfLobbyEnter",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "memberAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "entryId",
						"type": "uint256"
					}
				],
				"name": "xfLobbyEntry",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "rawAmount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "referrerAddr",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "enterDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"name": "xfLobbyExit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "xfLobbyMembers",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "headIndex",
						"type": "uint40"
					},
					{
						"internalType": "uint40",
						"name": "tailIndex",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "memberAddr",
						"type": "address"
					}
				],
				"name": "xfLobbyPendingDays",
				"outputs": [
					{
						"internalType": "uint256[2]",
						"name": "words",
						"type": "uint256[2]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "beginDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endDay",
						"type": "uint256"
					}
				],
				"name": "xfLobbyRange",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "list",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
				}
			},
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"btcAddressClaim(uint256,bytes32[],address,bytes32,bytes32,uint8,uint8,bytes32,bytes32,uint256,address)": {
					"details": "PUBLIC FACING: Claim a BTC address and its Satoshi balance in Hearts crediting the appropriate amount to a specified Eth address. Bitcoin ECDSA signature must be from that BTC address and must match the claim message for the Eth address.",
					"params": {
						"autoStakeDays": "Number of days to auto-stake, subject to minimum auto-stake days",
						"claimFlags": "Claim flags specifying address and message formats",
						"claimToAddr": "Destination Eth address to credit Hearts to",
						"proof": "Merkle tree proof",
						"pubKeyX": "First  half of uncompressed ECDSA public key for the BTC address",
						"pubKeyY": "Second half of uncompressed ECDSA public key for the BTC address",
						"r": "r parameter of ECDSA signature",
						"rawSatoshis": "Raw BTC address balance in Satoshis",
						"referrerAddr": "Eth address of referring user (optional; 0x0 for no referrer)",
						"s": "s parameter of ECDSA signature",
						"v": "v parameter of ECDSA signature"
					},
					"returns": {
						"_0": "Total number of Hearts credited, if successful"
					}
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
				},
				"xfLobbyEnter(address)": {
					"details": "PUBLIC FACING: Enter the tranform lobby for the current round",
					"params": {
						"referrerAddr": "Eth address of referring user (optional; 0x0 for no referrer)"
					}
				},
				"xfLobbyExit(uint256,uint256)": {
					"details": "PUBLIC FACING: Leave the transform lobby after the round is complete",
					"params": {
						"count": "Number of queued-enters to exit (optional; 0 for all)",
						"enterDay": "Day number when the member entered"
					}
				},
				"xfLobbyRange(uint256,uint256)": {
					"details": "PUBLIC FACING: Release any value that has been sent to the contract"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KEEPER_flattened.sol": "KEEPER"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KEEPER_flattened.sol": {
			"keccak256": "0xb311c2c5f8d8fe4ab8a52d84d3f45ccdd96336dd3807761271912092f0429f87",
			"license": "MIT",
			"urls": [
				"bzz-raw://8da7095a8539fa9cb394ed05a27744bf048ac4f99eff94e9b17d1b429710cc86",
				"dweb:/ipfs/QmNtWfsnMgMWZprquMV68bSZRsHcq5aSoyKfMP68CLPWkp"
			]
		}
	},
	"version": 1
}