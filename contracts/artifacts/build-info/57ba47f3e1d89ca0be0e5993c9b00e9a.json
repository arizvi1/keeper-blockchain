{
	"id": "57ba47f3e1d89ca0be0e5993c9b00e9a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/USDTToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\ncontract MY_TOKEN is ERC20(\"MY_TOKEN\",\"MT\"){\n    function mint(uint _amount) public{\n        _mint(msg.sender, _amount);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_24:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_25:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_29:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_30:\n    /* \"#utility.yul\":1313:1374   */\n  tag_31\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_33\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_12:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_35:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_14:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_40:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_41:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_39:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2971:3068   */\n  tag_48\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_49\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_50)\n    /* \"#utility.yul\":3192:3855   */\ntag_51:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_55:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa26469706673582212209cc516d61f765a48a01c3055d4c3bd46e093ca41f0095364436beb9fc7435f0d64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:5",
										"nodeType": "YulBlock",
										"src": "0:4114:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:780:5",
													"nodeType": "YulBlock",
													"src": "210:780:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nativeSrc": "294:13:5",
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:5",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:5",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:5",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nativeSrc": "330:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:5",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nativeSrc": "326:18:5",
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:5",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:5",
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nativeSrc": "369:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nativeSrc": "356:10:5",
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nativeSrc": "353:36:5",
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nativeSrc": "398:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nativeSrc": "408:7:5",
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:5",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nativeSrc": "438:9:5",
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:5",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:5",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nativeSrc": "498:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nativeSrc": "494:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:5",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nativeSrc": "490:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nativeSrc": "486:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nativeSrc": "474:53:5",
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:5",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:5",
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nativeSrc": "588:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nativeSrc": "588:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nativeSrc": "542:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nativeSrc": "562:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nativeSrc": "539:46:5",
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nativeSrc": "536:72:5",
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:5",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nativeSrc": "617:22:5",
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nativeSrc": "617:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nativeSrc": "648:18:5",
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nativeSrc": "648:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nativeSrc": "675:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:5",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:5",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:5",
																"nodeType": "YulBlock",
																"src": "737:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:5",
																					"nodeType": "YulLiteral",
																					"src": "746:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:5",
																					"nodeType": "YulLiteral",
																					"src": "749:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:5"
																			},
																			"nativeSrc": "739:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:5"
																		},
																		"nativeSrc": "739:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nativeSrc": "708:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:5",
																				"nodeType": "YulLiteral",
																				"src": "725:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nativeSrc": "704:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nativeSrc": "701:35:5",
																"nodeType": "YulFunctionCall",
																"src": "701:35:5"
															},
															"nativeSrc": "698:55:5",
															"nodeType": "YulIf",
															"src": "698:55:5"
														},
														{
															"nativeSrc": "762:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:5",
																"nodeType": "YulLiteral",
																"src": "771:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:5",
																	"nodeType": "YulTypedName",
																	"src": "766:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:5",
																"nodeType": "YulBlock",
																"src": "827:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:5"
																							},
																							"nativeSrc": "852:14:5",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:5"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:5"
																					},
																					"nativeSrc": "848:23:5",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:5"
																									},
																									"nativeSrc": "883:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:5"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:5"
																							},
																							"nativeSrc": "879:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:5"
																					},
																					"nativeSrc": "873:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:5"
																			},
																			"nativeSrc": "841:63:5",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:5"
																		},
																		"nativeSrc": "841:63:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:5"
																},
																"nativeSrc": "789:9:5",
																"nodeType": "YulFunctionCall",
																"src": "789:9:5"
															},
															"nativeSrc": "781:133:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:5",
																"nodeType": "YulBlock",
																"src": "799:19:5",
																"statements": [
																	{
																		"nativeSrc": "801:15:5",
																		"nodeType": "YulAssignment",
																		"src": "801:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:5"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:5"
																			},
																			"nativeSrc": "806:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:5",
																"nodeType": "YulBlock",
																"src": "785:3:5",
																"statements": []
															},
															"src": "781:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:5"
																				},
																				"nativeSrc": "934:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:5",
																				"nodeType": "YulLiteral",
																				"src": "951:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:5"
																		},
																		"nativeSrc": "930:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:5",
																		"nodeType": "YulLiteral",
																		"src": "958:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:5"
																},
																"nativeSrc": "923:37:5",
																"nodeType": "YulFunctionCall",
																"src": "923:37:5"
															},
															"nativeSrc": "923:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:5"
														},
														{
															"nativeSrc": "969:15:5",
															"nodeType": "YulAssignment",
															"src": "969:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:5",
																"nodeType": "YulIdentifier",
																"src": "978:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:844:5"
											},
											{
												"body": {
													"nativeSrc": "1113:444:5",
													"nodeType": "YulBlock",
													"src": "1113:444:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:5",
																"nodeType": "YulBlock",
																"src": "1159:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:5"
																			},
																			"nativeSrc": "1161:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:5"
																		},
																		"nativeSrc": "1161:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:5"
																		},
																		"nativeSrc": "1130:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:5"
																},
																"nativeSrc": "1126:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:5"
															},
															"nativeSrc": "1123:52:5",
															"nodeType": "YulIf",
															"src": "1123:52:5"
														},
														{
															"nativeSrc": "1184:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:5"
																},
																"nativeSrc": "1198:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:5"
																		},
																		"nativeSrc": "1237:10:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:5"
																},
																"nativeSrc": "1233:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:5",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:5",
																"nodeType": "YulBlock",
																"src": "1278:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:5"
																			},
																			"nativeSrc": "1280:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:5"
																		},
																		"nativeSrc": "1280:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:5"
																},
																"nativeSrc": "1263:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:5"
															},
															"nativeSrc": "1260:34:5",
															"nodeType": "YulIf",
															"src": "1260:34:5"
														},
														{
															"nativeSrc": "1303:71:5",
															"nodeType": "YulAssignment",
															"src": "1303:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:5"
																		},
																		"nativeSrc": "1342:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:5"
																},
																"nativeSrc": "1313:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:5"
																}
															]
														},
														{
															"nativeSrc": "1383:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:5"
																		},
																		"nativeSrc": "1405:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:5"
																},
																"nativeSrc": "1399:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:5",
																"nodeType": "YulBlock",
																"src": "1453:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:5"
																			},
																			"nativeSrc": "1455:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:5"
																		},
																		"nativeSrc": "1455:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:5"
																},
																"nativeSrc": "1436:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:5"
															},
															"nativeSrc": "1433:36:5",
															"nodeType": "YulIf",
															"src": "1433:36:5"
														},
														{
															"nativeSrc": "1478:73:5",
															"nodeType": "YulAssignment",
															"src": "1478:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:5"
																		},
																		"nativeSrc": "1517:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:5"
																},
																"nativeSrc": "1488:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:5",
														"nodeType": "YulTypedName",
														"src": "1071:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:5",
														"nodeType": "YulTypedName",
														"src": "1082:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:5",
														"nodeType": "YulTypedName",
														"src": "1094:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:5",
														"nodeType": "YulTypedName",
														"src": "1102:6:5",
														"type": ""
													}
												],
												"src": "995:562:5"
											},
											{
												"body": {
													"nativeSrc": "1617:325:5",
													"nodeType": "YulBlock",
													"src": "1617:325:5",
													"statements": [
														{
															"nativeSrc": "1627:22:5",
															"nodeType": "YulAssignment",
															"src": "1627:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:5"
																},
																"nativeSrc": "1637:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:5"
																},
																"nativeSrc": "1684:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:5",
																"nodeType": "YulBlock",
																"src": "1735:31:5",
																"statements": [
																	{
																		"nativeSrc": "1737:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:5"
																			},
																			"nativeSrc": "1747:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:5"
																},
																"nativeSrc": "1708:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:5"
															},
															"nativeSrc": "1705:61:5",
															"nodeType": "YulIf",
															"src": "1705:61:5"
														},
														{
															"body": {
																"nativeSrc": "1825:111:5",
																"nodeType": "YulBlock",
																"src": "1825:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:5"
																					},
																					"nativeSrc": "1849:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:5"
																			},
																			"nativeSrc": "1839:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:5"
																		},
																		"nativeSrc": "1839:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:5"
																			},
																			"nativeSrc": "1883:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:5"
																		},
																		"nativeSrc": "1883:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:5"
																			},
																			"nativeSrc": "1911:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:5"
																		},
																		"nativeSrc": "1911:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:5"
																		},
																		"nativeSrc": "1801:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:5"
																},
																"nativeSrc": "1778:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:5"
															},
															"nativeSrc": "1775:161:5",
															"nodeType": "YulIf",
															"src": "1775:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:5",
														"nodeType": "YulTypedName",
														"src": "1597:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:5",
														"nodeType": "YulTypedName",
														"src": "1606:6:5",
														"type": ""
													}
												],
												"src": "1562:380:5"
											},
											{
												"body": {
													"nativeSrc": "2003:65:5",
													"nodeType": "YulBlock",
													"src": "2003:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:5"
																},
																"nativeSrc": "2013:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:5"
															},
															"nativeSrc": "2013:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:5"
														},
														{
															"nativeSrc": "2036:26:5",
															"nodeType": "YulAssignment",
															"src": "2036:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:5"
																},
																"nativeSrc": "2044:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:5",
														"nodeType": "YulTypedName",
														"src": "1986:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:5",
														"nodeType": "YulTypedName",
														"src": "1994:4:5",
														"type": ""
													}
												],
												"src": "1947:121:5"
											},
											{
												"body": {
													"nativeSrc": "2154:437:5",
													"nodeType": "YulBlock",
													"src": "2154:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:5",
																"nodeType": "YulBlock",
																"src": "2187:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:5"
																			},
																			"nativeSrc": "2201:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:5"
																		},
																		"nativeSrc": "2201:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:5"
																	},
																	{
																		"nativeSrc": "2230:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:5"
																			},
																			"nativeSrc": "2242:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:5"
																							},
																							"nativeSrc": "2309:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:5"
																					},
																					"nativeSrc": "2302:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:5"
																			},
																			"nativeSrc": "2292:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:5",
																			"nodeType": "YulBlock",
																			"src": "2367:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:5"
																			},
																			"nativeSrc": "2346:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:5"
																		},
																		"nativeSrc": "2343:47:5",
																		"nodeType": "YulIf",
																		"src": "2343:47:5"
																	},
																	{
																		"nativeSrc": "2403:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:5"
																							},
																							"nativeSrc": "2430:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:5"
																					},
																					"nativeSrc": "2423:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:5"
																			},
																			"nativeSrc": "2413:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:5",
																			"nodeType": "YulBlock",
																			"src": "2555:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:5"
																						},
																						"nativeSrc": "2557:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:5"
																					},
																					"nativeSrc": "2557:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:5"
																			},
																			"nativeSrc": "2502:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:5"
																		},
																		"nativeSrc": "2494:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:5",
																			"nodeType": "YulBlock",
																			"src": "2516:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:5"
																						},
																						"nativeSrc": "2527:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:5",
																			"nodeType": "YulBlock",
																			"src": "2498:3:5",
																			"statements": []
																		},
																		"src": "2494:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:5"
																},
																"nativeSrc": "2167:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:5"
															},
															"nativeSrc": "2164:421:5",
															"nodeType": "YulIf",
															"src": "2164:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:5",
														"nodeType": "YulTypedName",
														"src": "2126:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:5",
														"nodeType": "YulTypedName",
														"src": "2133:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:5",
														"nodeType": "YulTypedName",
														"src": "2138:10:5",
														"type": ""
													}
												],
												"src": "2073:518:5"
											},
											{
												"body": {
													"nativeSrc": "2681:81:5",
													"nodeType": "YulBlock",
													"src": "2681:81:5",
													"statements": [
														{
															"nativeSrc": "2691:65:5",
															"nodeType": "YulAssignment",
															"src": "2691:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:5"
																								},
																								"nativeSrc": "2720:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:5"
																								},
																								"nativeSrc": "2733:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:5"
																						},
																						"nativeSrc": "2716:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:5"
																				},
																				"nativeSrc": "2712:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:5"
																		},
																		"nativeSrc": "2702:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:5"
																		},
																		"nativeSrc": "2744:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:5"
																},
																"nativeSrc": "2699:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:5",
														"nodeType": "YulTypedName",
														"src": "2658:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:5",
														"nodeType": "YulTypedName",
														"src": "2664:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:5",
														"nodeType": "YulTypedName",
														"src": "2672:4:5",
														"type": ""
													}
												],
												"src": "2596:166:5"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:5",
													"nodeType": "YulBlock",
													"src": "2863:1249:5",
													"statements": [
														{
															"nativeSrc": "2873:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:5"
																},
																"nativeSrc": "2887:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:5",
																"nodeType": "YulBlock",
																"src": "2940:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:5"
																			},
																			"nativeSrc": "2942:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:5"
																		},
																		"nativeSrc": "2942:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:5"
																				},
																				"nativeSrc": "2924:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:5"
																		},
																		"nativeSrc": "2920:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:5"
																},
																"nativeSrc": "2909:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:5"
															},
															"nativeSrc": "2906:56:5",
															"nodeType": "YulIf",
															"src": "2906:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:5"
																				},
																				"nativeSrc": "3047:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:5"
																		},
																		"nativeSrc": "3021:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:5"
																},
																"nativeSrc": "2971:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:5"
															},
															"nativeSrc": "2971:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:5"
														},
														{
															"nativeSrc": "3077:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:5",
																"nodeType": "YulLiteral",
																"src": "3094:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:5",
																"nodeType": "YulLiteral",
																"src": "3123:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:5",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:5",
															"nodeType": "YulAssignment",
															"src": "3136:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:5",
																"nodeType": "YulLiteral",
																"src": "3149:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:5",
																		"nodeType": "YulBlock",
																		"src": "3199:656:5",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:5"
																							},
																							"nativeSrc": "3240:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:5"
																					},
																					"nativeSrc": "3228:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:5"
																					},
																					"nativeSrc": "3275:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:5",
																					"nodeType": "YulBlock",
																					"src": "3410:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:5"
																												},
																												"nativeSrc": "3449:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:5"
																										},
																										"nativeSrc": "3443:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:5"
																								},
																								"nativeSrc": "3428:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:5"
																							},
																							"nativeSrc": "3428:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:5"
																						},
																						{
																							"nativeSrc": "3487:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:5"
																								},
																								"nativeSrc": "3497:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:5",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:5"
																								},
																								"nativeSrc": "3541:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:5"
																					},
																					"nativeSrc": "3354:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:5"
																				},
																				"nativeSrc": "3346:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:5",
																					"nodeType": "YulBlock",
																					"src": "3369:28:5",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:5"
																								},
																								"nativeSrc": "3376:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:5",
																					"nodeType": "YulBlock",
																					"src": "3350:3:5",
																					"statements": []
																				},
																				"src": "3346:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:5",
																					"nodeType": "YulBlock",
																					"src": "3630:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:5"
																										},
																										"nativeSrc": "3671:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:5"
																								},
																								"nativeSrc": "3665:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:5"
																																		},
																																		"nativeSrc": "3750:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:5"
																																},
																																"nativeSrc": "3746:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:5"
																																},
																																"nativeSrc": "3772:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:5"
																														},
																														"nativeSrc": "3742:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:5"
																												},
																												"nativeSrc": "3738:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:5"
																										},
																										"nativeSrc": "3723:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:5"
																								},
																								"nativeSrc": "3708:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:5"
																							},
																							"nativeSrc": "3708:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:5"
																					},
																					"nativeSrc": "3598:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:5"
																				},
																				"nativeSrc": "3595:201:5",
																				"nodeType": "YulIf",
																				"src": "3595:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:5"
																									},
																									"nativeSrc": "3826:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:5"
																							},
																							"nativeSrc": "3822:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:5"
																					},
																					"nativeSrc": "3809:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:5"
																				},
																				"nativeSrc": "3809:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:5",
																	"nodeType": "YulCase",
																	"src": "3192:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:5",
																		"nodeType": "YulBlock",
																		"src": "3872:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:5",
																					"nodeType": "YulBlock",
																					"src": "3935:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:5"
																										},
																										"nativeSrc": "3968:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:5"
																								},
																								"nativeSrc": "3962:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:5"
																				},
																				"nativeSrc": "3913:89:5",
																				"nodeType": "YulIf",
																				"src": "3913:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:5"
																							},
																							"nativeSrc": "4028:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:5"
																					},
																					"nativeSrc": "4015:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:5"
																				},
																				"nativeSrc": "4015:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:5",
																	"nodeType": "YulCase",
																	"src": "3864:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:5"
																},
																"nativeSrc": "3169:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:5"
															},
															"nativeSrc": "3162:944:5",
															"nodeType": "YulSwitch",
															"src": "3162:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:5",
														"nodeType": "YulTypedName",
														"src": "2848:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:5",
														"nodeType": "YulTypedName",
														"src": "2854:3:5",
														"type": ""
													}
												],
												"src": "2767:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b1438038062000b1483398101604081905262000033916200011a565b60036200004183826200020a565b5060046200005082826200020a565b505050620002d6565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b8160405283815260209250866020858801011115620000e2575f80fd5b5f91505b83821015620001055785820183015181830184015290820190620000e6565b5f602085830101528094505050505092915050565b5f80604083850312156200012c575f80fd5b82516001600160401b038082111562000143575f80fd5b62000151868387016200006d565b9350602085015191508082111562000167575f80fd5b5062000176858286016200006d565b9150509250929050565b600181811c908216806200019557607f821691505b602082108103620001b457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020557805f5260205f20601f840160051c81016020851015620001e15750805b601f840160051c820191505b8181101562000202575f8155600101620001ed565b50505b505050565b81516001600160401b0381111562000226576200022662000059565b6200023e8162000237845462000180565b84620001ba565b602080601f83116001811462000274575f84156200025c5750858301515b5f19600386901b1c1916600185901b178555620002ce565b5f85815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61083080620002e45f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209cc516d61f765a48a01c3055d4c3bd46e093ca41f0095364436beb9fc7435f0d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB14 CODESIZE SUB DUP1 PUSH3 0xB14 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11A JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20A JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x105 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x151 DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x176 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x205 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x202 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x237 DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x274 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x283 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x830 DUP1 PUSH3 0x2E4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC5 AND 0xD6 0x1F PUSH23 0x5A48A01C3055D4C3BD46E093CA41F0095364436BEB9FC7 NUMBER PUSH0 0xD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:0;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:5;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:5;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:5;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:5;;;3962:26;3913:89;-1:-1:-1;;2724:1:5;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:5;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:5;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;1532:11312:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 845,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1136,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1256,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 803,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 555,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 615,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 411,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 580,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 790,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5754:5",
										"nodeType": "YulBlock",
										"src": "0:5754:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:5",
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nativeSrc": "145:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:5",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:5",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:5",
																		"nodeType": "YulLiteral",
																		"src": "184:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nativeSrc": "166:21:5",
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nativeSrc": "166:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nativeSrc": "196:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nativeSrc": "210:13:5",
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nativeSrc": "239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nativeSrc": "232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nativeSrc": "232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nativeSrc": "275:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:5",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:5",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:5",
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nativeSrc": "369:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:5",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nativeSrc": "365:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nativeSrc": "403:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nativeSrc": "399:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nativeSrc": "393:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nativeSrc": "358:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nativeSrc": "358:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nativeSrc": "302:13:5",
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nativeSrc": "294:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:5",
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nativeSrc": "318:15:5",
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nativeSrc": "323:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:5",
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nativeSrc": "454:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:5",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nativeSrc": "450:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nativeSrc": "443:42:5",
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nativeSrc": "443:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nativeSrc": "494:62:5",
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:5",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nativeSrc": "525:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:5",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nativeSrc": "542:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nativeSrc": "521:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nativeSrc": "506:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nativeSrc": "502:54:5",
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nativeSrc": "616:124:5",
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nativeSrc": "626:29:5",
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nativeSrc": "635:20:5",
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:5",
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nativeSrc": "720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nativeSrc": "720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:5",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:5",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nativeSrc": "699:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:5",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nativeSrc": "695:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nativeSrc": "684:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nativeSrc": "674:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nativeSrc": "667:50:5",
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nativeSrc": "664:70:5",
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:5",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:5",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nativeSrc": "832:167:5",
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:5",
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nativeSrc": "880:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nativeSrc": "880:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nativeSrc": "849:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nativeSrc": "845:32:5",
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nativeSrc": "842:52:5",
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nativeSrc": "903:39:5",
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nativeSrc": "913:29:5",
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nativeSrc": "951:42:5",
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:5",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nativeSrc": "974:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nativeSrc": "961:32:5",
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:5",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:5",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:5",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:5",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nativeSrc": "1099:92:5",
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nativeSrc": "1109:26:5",
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nativeSrc": "1117:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nativeSrc": "1169:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nativeSrc": "1162:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nativeSrc": "1144:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nativeSrc": "1144:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:5",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:5",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:5",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nativeSrc": "1297:76:5",
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nativeSrc": "1307:26:5",
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nativeSrc": "1315:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nativeSrc": "1342:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nativeSrc": "1342:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:5",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:5",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:5",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nativeSrc": "1482:224:5",
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:5",
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nativeSrc": "1530:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nativeSrc": "1530:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nativeSrc": "1499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nativeSrc": "1495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nativeSrc": "1492:52:5",
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nativeSrc": "1553:39:5",
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nativeSrc": "1563:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nativeSrc": "1601:48:5",
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nativeSrc": "1630:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nativeSrc": "1611:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:42:5",
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nativeSrc": "1681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nativeSrc": "1668:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:5",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:5",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:5",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:5",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:5",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nativeSrc": "1808:87:5",
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nativeSrc": "1818:26:5",
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nativeSrc": "1826:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nativeSrc": "1871:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nativeSrc": "1853:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:5",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:5",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:5",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nativeSrc": "1970:116:5",
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:5",
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nativeSrc": "2018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nativeSrc": "2018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nativeSrc": "1987:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nativeSrc": "1983:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nativeSrc": "1980:52:5",
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nativeSrc": "2041:39:5",
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nativeSrc": "2051:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:5",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:5",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:5",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nativeSrc": "2178:173:5",
													"nodeType": "YulBlock",
													"src": "2178:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:5",
																"nodeType": "YulBlock",
																"src": "2224:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:5"
																			},
																			"nativeSrc": "2226:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:5"
																		},
																		"nativeSrc": "2226:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:5"
																		},
																		"nativeSrc": "2195:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:5"
																},
																"nativeSrc": "2191:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:5"
															},
															"nativeSrc": "2188:52:5",
															"nodeType": "YulIf",
															"src": "2188:52:5"
														},
														{
															"nativeSrc": "2249:39:5",
															"nodeType": "YulAssignment",
															"src": "2249:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:5"
																},
																"nativeSrc": "2259:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:5"
																}
															]
														},
														{
															"nativeSrc": "2297:48:5",
															"nodeType": "YulAssignment",
															"src": "2297:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:5"
																		},
																		"nativeSrc": "2326:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:5"
																},
																"nativeSrc": "2307:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:5",
														"nodeType": "YulTypedName",
														"src": "2136:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:5",
														"nodeType": "YulTypedName",
														"src": "2147:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:5",
														"nodeType": "YulTypedName",
														"src": "2159:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:5",
														"nodeType": "YulTypedName",
														"src": "2167:6:5",
														"type": ""
													}
												],
												"src": "2091:260:5"
											},
											{
												"body": {
													"nativeSrc": "2411:325:5",
													"nodeType": "YulBlock",
													"src": "2411:325:5",
													"statements": [
														{
															"nativeSrc": "2421:22:5",
															"nodeType": "YulAssignment",
															"src": "2421:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nativeSrc": "2431:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:5"
																}
															]
														},
														{
															"nativeSrc": "2452:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:5"
																},
																"nativeSrc": "2478:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:5",
																"nodeType": "YulBlock",
																"src": "2529:31:5",
																"statements": [
																	{
																		"nativeSrc": "2531:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:5"
																			},
																			"nativeSrc": "2541:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:5"
																},
																"nativeSrc": "2502:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:5"
															},
															"nativeSrc": "2499:61:5",
															"nodeType": "YulIf",
															"src": "2499:61:5"
														},
														{
															"body": {
																"nativeSrc": "2619:111:5",
																"nodeType": "YulBlock",
																"src": "2619:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:5"
																					},
																					"nativeSrc": "2643:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:5"
																			},
																			"nativeSrc": "2633:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:5"
																		},
																		"nativeSrc": "2633:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:5"
																			},
																			"nativeSrc": "2677:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:5"
																		},
																		"nativeSrc": "2677:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:5"
																			},
																			"nativeSrc": "2705:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:5"
																		},
																		"nativeSrc": "2705:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:5"
																		},
																		"nativeSrc": "2595:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:5"
																},
																"nativeSrc": "2572:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:5"
															},
															"nativeSrc": "2569:161:5",
															"nodeType": "YulIf",
															"src": "2569:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:5",
														"nodeType": "YulTypedName",
														"src": "2391:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:5",
														"nodeType": "YulTypedName",
														"src": "2400:6:5",
														"type": ""
													}
												],
												"src": "2356:380:5"
											},
											{
												"body": {
													"nativeSrc": "2789:174:5",
													"nodeType": "YulBlock",
													"src": "2789:174:5",
													"statements": [
														{
															"nativeSrc": "2799:16:5",
															"nodeType": "YulAssignment",
															"src": "2799:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2810:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2813:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:5"
																},
																"nativeSrc": "2806:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2806:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2799:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2846:111:5",
																"nodeType": "YulBlock",
																"src": "2846:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2867:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2874:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2879:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2870:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:5"
																					},
																					"nativeSrc": "2870:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2860:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:5"
																			},
																			"nativeSrc": "2860:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:5"
																		},
																		"nativeSrc": "2860:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2911:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2914:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2904:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:5"
																			},
																			"nativeSrc": "2904:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:5"
																		},
																		"nativeSrc": "2904:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2942:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2932:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:5"
																			},
																			"nativeSrc": "2932:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:5"
																		},
																		"nativeSrc": "2932:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2830:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2833:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2827:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:5"
																},
																"nativeSrc": "2827:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2827:10:5"
															},
															"nativeSrc": "2824:133:5",
															"nodeType": "YulIf",
															"src": "2824:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2741:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2772:1:5",
														"nodeType": "YulTypedName",
														"src": "2772:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2775:1:5",
														"nodeType": "YulTypedName",
														"src": "2775:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2781:3:5",
														"nodeType": "YulTypedName",
														"src": "2781:3:5",
														"type": ""
													}
												],
												"src": "2741:222:5"
											},
											{
												"body": {
													"nativeSrc": "3142:227:5",
													"nodeType": "YulBlock",
													"src": "3142:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3159:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3170:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:5"
																},
																"nativeSrc": "3152:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3152:21:5"
															},
															"nativeSrc": "3152:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3193:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3204:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3189:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:5"
																		},
																		"nativeSrc": "3189:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3182:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:5"
																},
																"nativeSrc": "3182:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3182:30:5"
															},
															"nativeSrc": "3182:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3228:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:5"
																		},
																		"nativeSrc": "3228:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3248:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:5"
																},
																"nativeSrc": "3221:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3221:62:5"
															},
															"nativeSrc": "3221:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3303:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3299:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:5"
																		},
																		"nativeSrc": "3299:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3319:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:5"
																},
																"nativeSrc": "3292:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3292:35:5"
															},
															"nativeSrc": "3292:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:5"
														},
														{
															"nativeSrc": "3336:27:5",
															"nodeType": "YulAssignment",
															"src": "3336:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3344:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:5"
																},
																"nativeSrc": "3344:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3344:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3336:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2968:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:5",
														"nodeType": "YulTypedName",
														"src": "3119:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3133:4:5",
														"nodeType": "YulTypedName",
														"src": "3133:4:5",
														"type": ""
													}
												],
												"src": "2968:401:5"
											},
											{
												"body": {
													"nativeSrc": "3548:226:5",
													"nodeType": "YulBlock",
													"src": "3548:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3565:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3576:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:5"
																},
																"nativeSrc": "3558:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3558:21:5"
															},
															"nativeSrc": "3558:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3595:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:5"
																		},
																		"nativeSrc": "3595:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:5"
																},
																"nativeSrc": "3588:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3588:30:5"
															},
															"nativeSrc": "3588:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3638:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3649:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3634:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:5"
																		},
																		"nativeSrc": "3634:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3654:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:5"
																},
																"nativeSrc": "3627:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3627:62:5"
															},
															"nativeSrc": "3627:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3720:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3705:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:5"
																		},
																		"nativeSrc": "3705:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3725:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3698:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:5"
																},
																"nativeSrc": "3698:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3698:34:5"
															},
															"nativeSrc": "3698:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:5"
														},
														{
															"nativeSrc": "3741:27:5",
															"nodeType": "YulAssignment",
															"src": "3741:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3753:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3764:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3749:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:5"
																},
																"nativeSrc": "3749:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3749:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3741:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3374:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3525:9:5",
														"nodeType": "YulTypedName",
														"src": "3525:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3539:4:5",
														"nodeType": "YulTypedName",
														"src": "3539:4:5",
														"type": ""
													}
												],
												"src": "3374:400:5"
											},
											{
												"body": {
													"nativeSrc": "3953:224:5",
													"nodeType": "YulBlock",
													"src": "3953:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3970:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3981:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3963:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:5"
																},
																"nativeSrc": "3963:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3963:21:5"
															},
															"nativeSrc": "3963:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4004:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4000:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:5"
																		},
																		"nativeSrc": "4000:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4020:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3993:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:5"
																},
																"nativeSrc": "3993:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3993:30:5"
															},
															"nativeSrc": "3993:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4043:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4054:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:5"
																		},
																		"nativeSrc": "4039:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4059:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4032:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:5"
																},
																"nativeSrc": "4032:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4032:62:5"
															},
															"nativeSrc": "4032:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4114:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4125:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4110:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:5"
																		},
																		"nativeSrc": "4110:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4103:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:5"
																},
																"nativeSrc": "4103:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4103:32:5"
															},
															"nativeSrc": "4103:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:5"
														},
														{
															"nativeSrc": "4144:27:5",
															"nodeType": "YulAssignment",
															"src": "4144:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4156:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4167:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:5"
																},
																"nativeSrc": "4152:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4152:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4144:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3779:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3930:9:5",
														"nodeType": "YulTypedName",
														"src": "3930:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3944:4:5",
														"nodeType": "YulTypedName",
														"src": "3944:4:5",
														"type": ""
													}
												],
												"src": "3779:398:5"
											},
											{
												"body": {
													"nativeSrc": "4356:179:5",
													"nodeType": "YulBlock",
													"src": "4356:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4373:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4366:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:5"
																},
																"nativeSrc": "4366:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4366:21:5"
															},
															"nativeSrc": "4366:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4407:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4418:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4403:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:5"
																		},
																		"nativeSrc": "4403:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:5"
																},
																"nativeSrc": "4396:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4396:30:5"
															},
															"nativeSrc": "4396:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:5"
																		},
																		"nativeSrc": "4442:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4462:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:5"
																},
																"nativeSrc": "4435:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4435:59:5"
															},
															"nativeSrc": "4435:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:5"
														},
														{
															"nativeSrc": "4503:26:5",
															"nodeType": "YulAssignment",
															"src": "4503:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4515:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:5"
																},
																"nativeSrc": "4511:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4511:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4503:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4182:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4333:9:5",
														"nodeType": "YulTypedName",
														"src": "4333:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4347:4:5",
														"nodeType": "YulTypedName",
														"src": "4347:4:5",
														"type": ""
													}
												],
												"src": "4182:353:5"
											},
											{
												"body": {
													"nativeSrc": "4714:227:5",
													"nodeType": "YulBlock",
													"src": "4714:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4731:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4724:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:5"
																},
																"nativeSrc": "4724:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4724:21:5"
															},
															"nativeSrc": "4724:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4765:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4776:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4761:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:5"
																		},
																		"nativeSrc": "4761:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4781:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:5"
																},
																"nativeSrc": "4754:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4754:30:5"
															},
															"nativeSrc": "4754:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4815:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4800:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:5"
																		},
																		"nativeSrc": "4800:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4820:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4793:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:5"
																},
																"nativeSrc": "4793:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4793:62:5"
															},
															"nativeSrc": "4793:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:5"
																		},
																		"nativeSrc": "4871:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4891:7:5",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4864:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:5"
																},
																"nativeSrc": "4864:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4864:35:5"
															},
															"nativeSrc": "4864:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:5"
														},
														{
															"nativeSrc": "4908:27:5",
															"nodeType": "YulAssignment",
															"src": "4908:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4920:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4931:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4916:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:5"
																},
																"nativeSrc": "4916:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4916:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4908:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4540:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4691:9:5",
														"nodeType": "YulTypedName",
														"src": "4691:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:5",
														"nodeType": "YulTypedName",
														"src": "4705:4:5",
														"type": ""
													}
												],
												"src": "4540:401:5"
											},
											{
												"body": {
													"nativeSrc": "5120:225:5",
													"nodeType": "YulBlock",
													"src": "5120:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:5"
																},
																"nativeSrc": "5130:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:5"
															},
															"nativeSrc": "5130:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:5"
																		},
																		"nativeSrc": "5167:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:5"
																},
																"nativeSrc": "5160:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:5"
															},
															"nativeSrc": "5160:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:5"
																		},
																		"nativeSrc": "5206:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5226:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:5"
																},
																"nativeSrc": "5199:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:5"
															},
															"nativeSrc": "5199:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:5"
																		},
																		"nativeSrc": "5277:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5297:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:5"
																},
																"nativeSrc": "5270:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5270:33:5"
															},
															"nativeSrc": "5270:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:5"
														},
														{
															"nativeSrc": "5312:27:5",
															"nodeType": "YulAssignment",
															"src": "5312:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5320:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:5"
																},
																"nativeSrc": "5320:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5320:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5312:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:5",
														"nodeType": "YulTypedName",
														"src": "5097:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:5",
														"nodeType": "YulTypedName",
														"src": "5111:4:5",
														"type": ""
													}
												],
												"src": "4946:399:5"
											},
											{
												"body": {
													"nativeSrc": "5524:228:5",
													"nodeType": "YulBlock",
													"src": "5524:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:5"
																},
																"nativeSrc": "5534:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5534:21:5"
															},
															"nativeSrc": "5534:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5575:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5586:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5571:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:5"
																		},
																		"nativeSrc": "5571:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:5"
																},
																"nativeSrc": "5564:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5564:30:5"
															},
															"nativeSrc": "5564:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5614:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5610:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:5"
																		},
																		"nativeSrc": "5610:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5630:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:5"
																},
																"nativeSrc": "5603:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5603:62:5"
															},
															"nativeSrc": "5603:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:5"
																		},
																		"nativeSrc": "5681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5701:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5674:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:5"
																},
																"nativeSrc": "5674:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5674:36:5"
															},
															"nativeSrc": "5674:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:5"
														},
														{
															"nativeSrc": "5719:27:5",
															"nodeType": "YulAssignment",
															"src": "5719:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5731:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5742:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5727:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:5"
																},
																"nativeSrc": "5727:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5727:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5719:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5350:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5501:9:5",
														"nodeType": "YulTypedName",
														"src": "5501:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5515:4:5",
														"nodeType": "YulTypedName",
														"src": "5515:4:5",
														"type": ""
													}
												],
												"src": "5350:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209cc516d61f765a48a01c3055d4c3bd46e093ca41f0095364436beb9fc7435f0d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC5 AND 0xD6 0x1F PUSH23 0x5A48A01C3055D4C3BD46E093CA41F0095364436BEB9FC7 NUMBER PUSH0 0xD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4444:197:0;1004:187:5;3255:106:0;3342:12;;3255:106;;;1342:25:5;;;1330:2;1315:18;3255:106:0;1196:177:5;5203:256:0;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:5;;1841:2;1826:18;3104:91:0;1711:184:5;5854:234:0;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:0;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:3;4581:32:0;719:10:3;4597:7:0;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:3;5356:38:0;5372:4;719:10:3;5387:6:0;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:0;;5203:256;-1:-1:-1;;;;5203:256:0:o;5854:234::-;5942:4;719:10:3;5996:64:0;719:10:3;6012:7:0;6049:10;6021:25;719:10:3;6012:7:0;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:3;6668:4:0;6749:25;719:10:3;6766:7:0;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:0;;3170:2:5;6784:85:0;;;3152:21:5;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:5;;;3292:35;3344:19;;6784:85:0;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:3;3873:28:0;719:10:3;3890:2:0;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:0;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:0;;10550:68;;;;-1:-1:-1;;;10550:68:0;;3576:2:5;10550:68:0;;;3558:21:5;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:5;;;3698:34;3749:19;;10550:68:0;3374:400:5;10550:68:0;-1:-1:-1;;;;;10636:21:0;;10628:68;;;;-1:-1:-1;;;10628:68:0;;3981:2:5;10628:68:0;;;3963:21:5;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:5;;;4103:32;4152:19;;10628:68:0;3779:398:5;10628:68:0;-1:-1:-1;;;;;10707:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:5;;;10758:32:0;;1315:18:5;10758:32:0;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:0;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:0;;4384:2:5;11297:68:0;;;4366:21:5;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:0;4182:353:5;11297:68:0;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:0;;7544:68;;;;-1:-1:-1;;;7544:68:0;;4742:2:5;7544:68:0;;;4724:21:5;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:5;;;4864:35;4916:19;;7544:68:0;4540:401:5;7544:68:0;-1:-1:-1;;;;;7630:16:0;;7622:64;;;;-1:-1:-1;;;7622:64:0;;5148:2:5;7622:64:0;;;5130:21:5;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:5;;;5270:33;5320:19;;7622:64:0;4946:399:5;7622:64:0;-1:-1:-1;;;;;7768:15:0;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:0;;5552:2:5;7793:72:0;;;5534:21:5;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:5;;;5674:36;5727:19;;7793:72:0;5350:402:5;7793:72:0;-1:-1:-1;;;;;7899:15:0;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:5;;;8114:13:0;;8163:26;;1315:18:5;8163:26:0;;;;;;;8200:37;12073:91;14:548:5;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc516d61f765a48a01c3055d4c3bd46e093ca41f0095364436beb9fc7435f0d64736f6c63430008170033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/USDTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/USDTToken.sol": {
				"MY_TOKEN": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/USDTToken.sol\":113:241  contract MY_TOKEN is ERC20(\"MY_TOKEN\",\"MT\"){... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x26acafaa27a5a2a7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf2, 0x1355)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/USDTToken.sol\":113:241  contract MY_TOKEN is ERC20(\"MY_TOKEN\",\"MT\"){... */\n  jump(tag_13)\n    /* \"#utility.yul\":14:141   */\ntag_8:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_9:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_16:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_17\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_17:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_11:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_21\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_21:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_22:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_22)\ntag_24:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_20:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_5:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1555:1652   */\n  tag_29\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_30\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_9\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_11\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_32\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_33:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_31)\n    /* \"#utility.yul\":1776:2439   */\ntag_32:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_36:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_39:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_31:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_13:\n    /* \"contracts/USDTToken.sol\":113:241  contract MY_TOKEN is ERC20(\"MY_TOKEN\",\"MT\"){... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/USDTToken.sol\":113:241  contract MY_TOKEN is ERC20(\"MY_TOKEN\",\"MT\"){... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_18\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_18\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_20\n      tag_40\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_16\n      tag_49\n      jump\t// in\n        /* \"contracts/USDTToken.sol\":162:239  function mint(uint _amount) public{... */\n    tag_11:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_20\n      tag_60\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_26\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_70\n      jump\t// in\n    tag_71:\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_75:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n        /* \"contracts/USDTToken.sol\":162:239  function mint(uint _amount) public{... */\n    tag_54:\n        /* \"contracts/USDTToken.sol\":206:232  _mint(msg.sender, _amount) */\n      tag_102\n        /* \"contracts/USDTToken.sol\":212:222  msg.sender */\n      caller\n        /* \"contracts/USDTToken.sol\":224:231  _amount */\n      dup3\n        /* \"contracts/USDTToken.sol\":206:211  _mint */\n      tag_103\n        /* \"contracts/USDTToken.sol\":206:232  _mint(msg.sender, _amount) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/USDTToken.sol\":162:239  function mint(uint _amount) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3337:3358   */\n      mstore\n        /* \"#utility.yul\":3394:3396   */\n      0x25\n        /* \"#utility.yul\":3374:3392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3367:3397   */\n      mstore\n        /* \"#utility.yul\":3433:3467   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3413:3431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3406:3468   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3484:3502   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3477:3512   */\n      mstore\n        /* \"#utility.yul\":3529:3548   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3761:3763   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3743:3764   */\n      mstore\n        /* \"#utility.yul\":3800:3802   */\n      0x24\n        /* \"#utility.yul\":3780:3798   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3773:3803   */\n      mstore\n        /* \"#utility.yul\":3839:3873   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3819:3837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3812:3874   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3890:3908   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3883:3917   */\n      mstore\n        /* \"#utility.yul\":3934:3953   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n        /* \"#utility.yul\":3559:3959   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4166:4168   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4148:4169   */\n      mstore\n        /* \"#utility.yul\":4205:4207   */\n      0x22\n        /* \"#utility.yul\":4185:4203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4178:4208   */\n      mstore\n        /* \"#utility.yul\":4244:4278   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4224:4242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4217:4279   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4295:4313   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4288:4320   */\n      mstore\n        /* \"#utility.yul\":4337:4356   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":3964:4362   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4569:4571   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4551:4572   */\n      mstore\n        /* \"#utility.yul\":4608:4610   */\n      0x1d\n        /* \"#utility.yul\":4588:4606   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4581:4611   */\n      mstore\n        /* \"#utility.yul\":4647:4678   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4627:4645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4620:4679   */\n      mstore\n        /* \"#utility.yul\":4696:4714   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_108\n        /* \"#utility.yul\":4367:4720   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4927:4929   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4909:4930   */\n      mstore\n        /* \"#utility.yul\":4966:4968   */\n      0x25\n        /* \"#utility.yul\":4946:4964   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4939:4969   */\n      mstore\n        /* \"#utility.yul\":5005:5039   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4985:5003   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4978:5040   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5056:5074   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5049:5084   */\n      mstore\n        /* \"#utility.yul\":5101:5120   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_108\n        /* \"#utility.yul\":4725:5126   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5333:5335   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5315:5336   */\n      mstore\n        /* \"#utility.yul\":5372:5374   */\n      0x23\n        /* \"#utility.yul\":5352:5370   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5345:5375   */\n      mstore\n        /* \"#utility.yul\":5411:5445   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5391:5409   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5384:5446   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5462:5480   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5455:5488   */\n      mstore\n        /* \"#utility.yul\":5505:5524   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":5131:5530   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5737:5739   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5719:5740   */\n      mstore\n        /* \"#utility.yul\":5776:5778   */\n      0x26\n        /* \"#utility.yul\":5756:5774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5749:5779   */\n      mstore\n        /* \"#utility.yul\":5815:5849   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5795:5813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5788:5850   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5866:5884   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5859:5895   */\n      mstore\n        /* \"#utility.yul\":5912:5931   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_108\n        /* \"#utility.yul\":5535:5937   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6144:6146   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6126:6147   */\n      mstore\n        /* \"#utility.yul\":6183:6185   */\n      0x1f\n        /* \"#utility.yul\":6163:6181   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6156:6186   */\n      mstore\n        /* \"#utility.yul\":6222:6255   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6202:6220   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6195:6256   */\n      mstore\n        /* \"#utility.yul\":6273:6291   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_108\n        /* \"#utility.yul\":5942:6297   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_151:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_19:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_159:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_159)\n    tag_161:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_156:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_163:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_22:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_165:\n        /* \"#utility.yul\":913:942   */\n      tag_166\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_156\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_32:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_170:\n        /* \"#utility.yul\":1563:1592   */\n      tag_171\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_172\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_45:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_175:\n        /* \"#utility.yul\":2051:2080   */\n      tag_176\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_156\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2271   */\n    tag_53:\n        /* \"#utility.yul\":2150:2156   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x20\n        /* \"#utility.yul\":2191:2200   */\n      dup3\n        /* \"#utility.yul\":2182:2189   */\n      dup5\n        /* \"#utility.yul\":2178:2201   */\n      sub\n        /* \"#utility.yul\":2174:2206   */\n      slt\n        /* \"#utility.yul\":2171:2223   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2219:2220   */\n      0x00\n        /* \"#utility.yul\":2216:2217   */\n      dup1\n        /* \"#utility.yul\":2209:2221   */\n      revert\n        /* \"#utility.yul\":2171:2223   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":2242:2265   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2091:2271   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2536   */\n    tag_65:\n        /* \"#utility.yul\":2344:2350   */\n      0x00\n        /* \"#utility.yul\":2352:2358   */\n      dup1\n        /* \"#utility.yul\":2405:2407   */\n      0x40\n        /* \"#utility.yul\":2393:2402   */\n      dup4\n        /* \"#utility.yul\":2384:2391   */\n      dup6\n        /* \"#utility.yul\":2380:2403   */\n      sub\n        /* \"#utility.yul\":2376:2408   */\n      slt\n        /* \"#utility.yul\":2373:2425   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2373:2425   */\n    tag_180:\n        /* \"#utility.yul\":2444:2473   */\n      tag_181\n        /* \"#utility.yul\":2463:2472   */\n      dup4\n        /* \"#utility.yul\":2444:2473   */\n      tag_156\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2434:2473   */\n      swap2\n      pop\n        /* \"#utility.yul\":2492:2530   */\n      tag_182\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2515:2524   */\n      dup5\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"#utility.yul\":2492:2530   */\n      tag_156\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2482:2530   */\n      swap1\n      pop\n        /* \"#utility.yul\":2276:2536   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2921   */\n    tag_70:\n        /* \"#utility.yul\":2620:2621   */\n      0x01\n        /* \"#utility.yul\":2616:2628   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2663:2675   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2684:2745   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2738:2742   */\n      0x7f\n        /* \"#utility.yul\":2730:2736   */\n      dup3\n        /* \"#utility.yul\":2726:2743   */\n      and\n        /* \"#utility.yul\":2716:2743   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2745   */\n    tag_184:\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2783:2789   */\n      dup3\n        /* \"#utility.yul\":2780:2794   */\n      lt\n        /* \"#utility.yul\":2760:2778   */\n      dup2\n        /* \"#utility.yul\":2757:2795   */\n      sub\n        /* \"#utility.yul\":2754:2915   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2837:2847   */\n      0x4e487b71\n        /* \"#utility.yul\":2832:2835   */\n      0xe0\n        /* \"#utility.yul\":2828:2848   */\n      shl\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2818:2849   */\n      mstore\n        /* \"#utility.yul\":2872:2876   */\n      0x22\n        /* \"#utility.yul\":2869:2870   */\n      0x04\n        /* \"#utility.yul\":2862:2877   */\n      mstore\n        /* \"#utility.yul\":2900:2904   */\n      0x24\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2905   */\n      revert\n        /* \"#utility.yul\":2754:2915   */\n    tag_185:\n      pop\n        /* \"#utility.yul\":2541:2921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2926:3148   */\n    tag_93:\n        /* \"#utility.yul\":2991:3000   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3012:3022   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3009:3142   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":3064:3074   */\n      0x4e487b71\n        /* \"#utility.yul\":3059:3062   */\n      0xe0\n        /* \"#utility.yul\":3055:3075   */\n      shl\n        /* \"#utility.yul\":3052:3053   */\n      0x00\n        /* \"#utility.yul\":3045:3076   */\n      mstore\n        /* \"#utility.yul\":3099:3103   */\n      0x11\n        /* \"#utility.yul\":3096:3097   */\n      0x04\n        /* \"#utility.yul\":3089:3104   */\n      mstore\n        /* \"#utility.yul\":3127:3131   */\n      0x24\n        /* \"#utility.yul\":3124:3125   */\n      0x00\n        /* \"#utility.yul\":3117:3132   */\n      revert\n\n    auxdata: 0xa26469706673582212206aa5ac08cf36e39a5522fa4ae7ec977223c40de53ee0185e47ae4f58342ef50a64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:5",
										"nodeType": "YulBlock",
										"src": "0:2698:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "201:325:5",
													"nodeType": "YulBlock",
													"src": "201:325:5",
													"statements": [
														{
															"nativeSrc": "211:22:5",
															"nodeType": "YulAssignment",
															"src": "211:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:5",
																		"nodeType": "YulLiteral",
																		"src": "225:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:5"
																},
																"nativeSrc": "221:12:5",
																"nodeType": "YulFunctionCall",
																"src": "221:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																}
															]
														},
														{
															"nativeSrc": "242:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:5",
																		"nodeType": "YulLiteral",
																		"src": "278:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:5"
																},
																"nativeSrc": "268:12:5",
																"nodeType": "YulFunctionCall",
																"src": "268:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:5",
																	"nodeType": "YulTypedName",
																	"src": "246:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:5",
																"nodeType": "YulBlock",
																"src": "319:31:5",
																"statements": [
																	{
																		"nativeSrc": "321:27:5",
																		"nodeType": "YulAssignment",
																		"src": "321:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:5",
																					"nodeType": "YulLiteral",
																					"src": "343:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:5"
																			},
																			"nativeSrc": "331:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:5"
																},
																"nativeSrc": "292:26:5",
																"nodeType": "YulFunctionCall",
																"src": "292:26:5"
															},
															"nativeSrc": "289:61:5",
															"nodeType": "YulIf",
															"src": "289:61:5"
														},
														{
															"body": {
																"nativeSrc": "409:111:5",
																"nodeType": "YulBlock",
																"src": "409:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:5",
																					"nodeType": "YulLiteral",
																					"src": "430:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:5",
																							"nodeType": "YulLiteral",
																							"src": "437:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:5",
																							"nodeType": "YulLiteral",
																							"src": "442:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:5"
																					},
																					"nativeSrc": "433:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:5"
																			},
																			"nativeSrc": "423:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:5"
																		},
																		"nativeSrc": "423:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:5",
																					"nodeType": "YulLiteral",
																					"src": "474:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:5",
																					"nodeType": "YulLiteral",
																					"src": "477:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:5"
																			},
																			"nativeSrc": "467:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:5"
																		},
																		"nativeSrc": "467:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:5",
																					"nodeType": "YulLiteral",
																					"src": "502:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:5",
																					"nodeType": "YulLiteral",
																					"src": "505:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:5"
																			},
																			"nativeSrc": "495:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:5"
																		},
																		"nativeSrc": "495:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:5",
																				"nodeType": "YulLiteral",
																				"src": "396:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:5"
																		},
																		"nativeSrc": "385:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:5"
																},
																"nativeSrc": "362:38:5",
																"nodeType": "YulFunctionCall",
																"src": "362:38:5"
															},
															"nativeSrc": "359:161:5",
															"nodeType": "YulIf",
															"src": "359:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:5",
														"nodeType": "YulTypedName",
														"src": "181:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:5",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													}
												],
												"src": "146:380:5"
											},
											{
												"body": {
													"nativeSrc": "587:65:5",
													"nodeType": "YulBlock",
													"src": "587:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:5",
																		"nodeType": "YulLiteral",
																		"src": "604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																},
																"nativeSrc": "597:14:5",
																"nodeType": "YulFunctionCall",
																"src": "597:14:5"
															},
															"nativeSrc": "597:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:5"
														},
														{
															"nativeSrc": "620:26:5",
															"nodeType": "YulAssignment",
															"src": "620:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:5",
																		"nodeType": "YulLiteral",
																		"src": "638:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:5",
																		"nodeType": "YulLiteral",
																		"src": "641:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:5"
																},
																"nativeSrc": "628:18:5",
																"nodeType": "YulFunctionCall",
																"src": "628:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:5",
														"nodeType": "YulTypedName",
														"src": "570:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:5",
														"nodeType": "YulTypedName",
														"src": "578:4:5",
														"type": ""
													}
												],
												"src": "531:121:5"
											},
											{
												"body": {
													"nativeSrc": "738:437:5",
													"nodeType": "YulBlock",
													"src": "738:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:5",
																"nodeType": "YulBlock",
																"src": "771:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:5",
																					"nodeType": "YulLiteral",
																					"src": "792:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:5"
																			},
																			"nativeSrc": "785:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:5"
																		},
																		"nativeSrc": "785:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:5"
																	},
																	{
																		"nativeSrc": "814:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:5",
																					"nodeType": "YulLiteral",
																					"src": "836:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:5",
																					"nodeType": "YulLiteral",
																					"src": "839:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:5"
																			},
																			"nativeSrc": "826:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:5",
																				"nodeType": "YulTypedName",
																				"src": "818:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:5",
																							"nodeType": "YulLiteral",
																							"src": "890:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:5",
																									"nodeType": "YulLiteral",
																									"src": "909:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:5"
																							},
																							"nativeSrc": "893:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:5"
																					},
																					"nativeSrc": "886:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:5"
																			},
																			"nativeSrc": "876:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:5",
																				"nodeType": "YulTypedName",
																				"src": "861:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:5",
																			"nodeType": "YulBlock",
																			"src": "951:23:5",
																			"statements": [
																				{
																					"nativeSrc": "953:19:5",
																					"nodeType": "YulAssignment",
																					"src": "953:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:5",
																					"nodeType": "YulLiteral",
																					"src": "945:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:5"
																			},
																			"nativeSrc": "930:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:5"
																		},
																		"nativeSrc": "927:47:5",
																		"nodeType": "YulIf",
																		"src": "927:47:5"
																	},
																	{
																		"nativeSrc": "987:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:5"
																							},
																							"nativeSrc": "1014:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:5"
																					},
																					"nativeSrc": "1007:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:5"
																			},
																			"nativeSrc": "997:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:5",
																				"nodeType": "YulTypedName",
																				"src": "991:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:5",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:5",
																			"nodeType": "YulBlock",
																			"src": "1139:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:5"
																						},
																						"nativeSrc": "1141:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:5"
																					},
																					"nativeSrc": "1141:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:5"
																			},
																			"nativeSrc": "1086:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:5"
																		},
																		"nativeSrc": "1078:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:5",
																			"nodeType": "YulBlock",
																			"src": "1100:26:5",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:5",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:5"
																						},
																						"nativeSrc": "1111:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:5",
																			"nodeType": "YulBlock",
																			"src": "1082:3:5",
																			"statements": []
																		},
																		"src": "1078:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:5",
																		"nodeType": "YulLiteral",
																		"src": "759:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:5"
																},
																"nativeSrc": "751:11:5",
																"nodeType": "YulFunctionCall",
																"src": "751:11:5"
															},
															"nativeSrc": "748:421:5",
															"nodeType": "YulIf",
															"src": "748:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:5",
														"nodeType": "YulTypedName",
														"src": "710:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:5",
														"nodeType": "YulTypedName",
														"src": "717:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:5",
														"nodeType": "YulTypedName",
														"src": "722:10:5",
														"type": ""
													}
												],
												"src": "657:518:5"
											},
											{
												"body": {
													"nativeSrc": "1265:81:5",
													"nodeType": "YulBlock",
													"src": "1265:81:5",
													"statements": [
														{
															"nativeSrc": "1275:65:5",
															"nodeType": "YulAssignment",
															"src": "1275:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:5"
																								},
																								"nativeSrc": "1304:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:5"
																								},
																								"nativeSrc": "1317:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:5"
																						},
																						"nativeSrc": "1300:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:5"
																				},
																				"nativeSrc": "1296:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:5"
																		},
																		"nativeSrc": "1286:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:5"
																		},
																		"nativeSrc": "1328:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:5"
																},
																"nativeSrc": "1283:57:5",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:5",
														"nodeType": "YulTypedName",
														"src": "1242:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:5",
														"nodeType": "YulTypedName",
														"src": "1248:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:5",
														"nodeType": "YulTypedName",
														"src": "1256:4:5",
														"type": ""
													}
												],
												"src": "1180:166:5"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:5",
													"nodeType": "YulBlock",
													"src": "1447:1249:5",
													"statements": [
														{
															"nativeSrc": "1457:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:5"
																},
																"nativeSrc": "1471:10:5",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:5",
																"nodeType": "YulBlock",
																"src": "1524:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:5"
																			},
																			"nativeSrc": "1526:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:5"
																		},
																		"nativeSrc": "1526:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:5"
																				},
																				"nativeSrc": "1508:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:5"
																		},
																		"nativeSrc": "1504:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:5"
																},
																"nativeSrc": "1493:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:5"
															},
															"nativeSrc": "1490:56:5",
															"nodeType": "YulIf",
															"src": "1490:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:5"
																				},
																				"nativeSrc": "1631:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:5"
																		},
																		"nativeSrc": "1605:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:5"
																},
																"nativeSrc": "1555:97:5",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:5"
															},
															"nativeSrc": "1555:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:5"
														},
														{
															"nativeSrc": "1661:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:5",
																"nodeType": "YulLiteral",
																"src": "1678:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:5",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:5",
																"nodeType": "YulLiteral",
																"src": "1707:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:5",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:5",
															"nodeType": "YulAssignment",
															"src": "1720:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:5",
																"nodeType": "YulLiteral",
																"src": "1733:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:5",
																		"nodeType": "YulBlock",
																		"src": "1783:656:5",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:5"
																							},
																							"nativeSrc": "1824:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:5"
																					},
																					"nativeSrc": "1812:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:5",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:5"
																					},
																					"nativeSrc": "1859:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:5",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:5",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:5",
																					"nodeType": "YulBlock",
																					"src": "1994:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:5"
																												},
																												"nativeSrc": "2033:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:5"
																										},
																										"nativeSrc": "2027:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:5"
																								},
																								"nativeSrc": "2012:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:5"
																							},
																							"nativeSrc": "2012:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:5"
																						},
																						{
																							"nativeSrc": "2071:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:5"
																								},
																								"nativeSrc": "2081:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:5",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:5"
																								},
																								"nativeSrc": "2125:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:5"
																					},
																					"nativeSrc": "1938:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:5"
																				},
																				"nativeSrc": "1930:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:5",
																					"nodeType": "YulBlock",
																					"src": "1953:28:5",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:5",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:5"
																								},
																								"nativeSrc": "1960:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:5",
																					"nodeType": "YulBlock",
																					"src": "1934:3:5",
																					"statements": []
																				},
																				"src": "1930:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:5",
																					"nodeType": "YulBlock",
																					"src": "2214:166:5",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:5"
																										},
																										"nativeSrc": "2255:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:5"
																								},
																								"nativeSrc": "2249:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:5",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:5"
																																		},
																																		"nativeSrc": "2334:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:5"
																																},
																																"nativeSrc": "2330:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:5"
																																},
																																"nativeSrc": "2356:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:5"
																														},
																														"nativeSrc": "2326:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:5"
																												},
																												"nativeSrc": "2322:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:5"
																										},
																										"nativeSrc": "2307:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:5"
																								},
																								"nativeSrc": "2292:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:5"
																							},
																							"nativeSrc": "2292:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:5"
																					},
																					"nativeSrc": "2182:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:5"
																				},
																				"nativeSrc": "2179:201:5",
																				"nodeType": "YulIf",
																				"src": "2179:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:5",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:5"
																									},
																									"nativeSrc": "2410:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:5",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:5"
																							},
																							"nativeSrc": "2406:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:5"
																					},
																					"nativeSrc": "2393:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:5"
																				},
																				"nativeSrc": "2393:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:5"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:5",
																	"nodeType": "YulCase",
																	"src": "1776:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:5",
																		"nodeType": "YulBlock",
																		"src": "2456:234:5",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:5",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:5",
																					"nodeType": "YulBlock",
																					"src": "2519:67:5",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:5",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:5"
																										},
																										"nativeSrc": "2552:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:5"
																								},
																								"nativeSrc": "2546:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:5"
																				},
																				"nativeSrc": "2497:89:5",
																				"nodeType": "YulIf",
																				"src": "2497:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:5"
																							},
																							"nativeSrc": "2612:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:5"
																					},
																					"nativeSrc": "2599:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:5"
																				},
																				"nativeSrc": "2599:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:5"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:5",
																	"nodeType": "YulCase",
																	"src": "2448:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:5"
																},
																"nativeSrc": "1753:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:5"
															},
															"nativeSrc": "1746:944:5",
															"nodeType": "YulSwitch",
															"src": "1746:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:5",
														"nodeType": "YulTypedName",
														"src": "1432:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:5",
														"nodeType": "YulTypedName",
														"src": "1438:3:5",
														"type": ""
													}
												],
												"src": "1351:1345:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600881526020016726acafaa27a5a2a760c11b81525060405180604001604052806002815260200161135560f21b815250816003908161005b9190610108565b5060046100688282610108565b5050506101c7565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061009857607f821691505b6020821081036100b657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010357805f5260205f20601f840160051c810160208510156100e15750805b601f840160051c820191505b81811015610100575f81556001016100ed565b50505b505050565b81516001600160401b0381111561012157610121610070565b6101358161012f8454610084565b846100bc565b602080601f831160018114610168575f84156101515750858301515b5f19600386901b1c1916600185901b1785556101bf565b5f85815260208120601f198616915b8281101561019657888601518255948401946001909101908401610177565b50858210156101b357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b610931806101d45f395ff3fe608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013d57806395d89b4114610165578063a0712d681461016d578063a457c2d714610182578063a9059cbb14610195578063dd62ed3e146101a8575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063395093511461012a575b5f80fd5b6100bd6101bb565b6040516100ca9190610774565b60405180910390f35b6100e66100e13660046107db565b61024b565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e6610116366004610803565b610264565b604051601281526020016100ca565b6100e66101383660046107db565b610287565b6100fa61014b36600461083c565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102a8565b61018061017b36600461085c565b6102b7565b005b6100e66101903660046107db565b6102c4565b6100e66101a33660046107db565b610343565b6100fa6101b6366004610873565b610350565b6060600380546101ca906108a4565b80601f01602080910402602001604051908101604052809291908181526020018280546101f6906108a4565b80156102415780601f1061021857610100808354040283529160200191610241565b820191905f5260205f20905b81548152906001019060200180831161022457829003601f168201915b5050505050905090565b5f3361025881858561037a565b60019150505b92915050565b5f3361027185828561049d565b61027c858585610515565b506001949350505050565b5f336102588185856102998383610350565b6102a391906108dc565b61037a565b6060600480546101ca906108a4565b6102c133826106b7565b50565b5f33816102d18286610350565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61027c828686840361037a565b5f33610258818585610515565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f6104a88484610350565b90505f19811461050f57818110156105025760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b61050f848484840361037a565b50505050565b6001600160a01b0383166105795760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105db5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b0383165f90815260208190526040902054818110156106525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361050f565b6001600160a01b03821661070d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161032d565b8060025f82825461071e91906108dc565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f602080835283518060208501525f5b818110156107a057858101830151858201604001528201610784565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107d6575f80fd5b919050565b5f80604083850312156107ec575f80fd5b6107f5836107c0565b946020939093013593505050565b5f805f60608486031215610815575f80fd5b61081e846107c0565b925061082c602085016107c0565b9150604084013590509250925092565b5f6020828403121561084c575f80fd5b610855826107c0565b9392505050565b5f6020828403121561086c575f80fd5b5035919050565b5f8060408385031215610884575f80fd5b61088d836107c0565b915061089b602084016107c0565b90509250929050565b600181811c908216806108b857607f821691505b6020821081036108d657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206aa5ac08cf36e39a5522fa4ae7ec977223c40de53ee0185e47ae4f58342ef50a64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x26ACAFAA27A5A2A7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1355 PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x108 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x68 DUP3 DUP3 PUSH2 0x108 JUMP JUMPDEST POP POP POP PUSH2 0x1C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x98 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x103 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xE1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x121 JUMPI PUSH2 0x121 PUSH2 0x70 JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x12F DUP5 SLOAD PUSH2 0x84 JUMP JUMPDEST DUP5 PUSH2 0xBC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x168 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x151 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1BF JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x196 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x177 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B3 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x931 DUP1 PUSH2 0x1D4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CA SWAP1 PUSH2 0x8A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F6 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x241 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x218 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x241 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x224 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x271 DUP6 DUP3 DUP6 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x27C DUP6 DUP6 DUP6 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x299 DUP4 DUP4 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CA SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x2C1 CALLER DUP3 PUSH2 0x6B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2D1 DUP3 DUP7 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x37A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 DUP5 DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x50F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH2 0x50F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x37A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x784 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F5 DUP4 PUSH2 0x7C0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x815 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x81E DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP3 POP PUSH2 0x82C PUSH1 0x20 DUP6 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x855 DUP3 PUSH2 0x7C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x884 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x88D DUP4 PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x89B PUSH1 0x20 DUP5 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xA5AC08CF36E39A5522FA4A 0xE7 0xEC SWAP8 PUSH19 0x23C40DE53EE0185E47AE4F58342EF50A64736F PUSH13 0x63430008170033000000000000 ",
							"sourceMap": "113:128:4:-:0;;;;;;;;;;;;;1980:113:0;;;;;;;;;;;;;-1:-1:-1;;;1980:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:0;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:0;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;113:128:4;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:5;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:5;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:5;;;2546:26;2497:89;-1:-1:-1;;1308:1:5;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:5;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:5;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;113:128:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 890,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_403": {
									"entryPoint": 1719,
									"id": 403,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1181,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1301,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 848,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 587,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 708,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 647,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_730": {
									"entryPoint": 695,
									"id": 730,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_54": {
									"entryPoint": 443,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 680,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 612,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 835,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6299:5",
										"nodeType": "YulBlock",
										"src": "0:6299:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:5",
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nativeSrc": "145:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:5",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:5",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:5",
																		"nodeType": "YulLiteral",
																		"src": "184:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nativeSrc": "166:21:5",
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nativeSrc": "166:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nativeSrc": "196:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nativeSrc": "210:13:5",
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nativeSrc": "239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nativeSrc": "232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nativeSrc": "232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nativeSrc": "275:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:5",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:5",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:5",
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nativeSrc": "369:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:5",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nativeSrc": "365:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nativeSrc": "403:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nativeSrc": "399:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nativeSrc": "393:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nativeSrc": "358:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nativeSrc": "358:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nativeSrc": "302:13:5",
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nativeSrc": "294:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:5",
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nativeSrc": "318:15:5",
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nativeSrc": "323:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:5",
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nativeSrc": "454:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:5",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nativeSrc": "450:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nativeSrc": "443:42:5",
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nativeSrc": "443:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nativeSrc": "494:62:5",
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:5",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nativeSrc": "525:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:5",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nativeSrc": "542:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nativeSrc": "521:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nativeSrc": "506:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nativeSrc": "502:54:5",
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nativeSrc": "616:124:5",
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nativeSrc": "626:29:5",
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nativeSrc": "635:20:5",
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:5",
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nativeSrc": "720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nativeSrc": "720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:5",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:5",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nativeSrc": "699:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:5",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nativeSrc": "695:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nativeSrc": "684:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nativeSrc": "674:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nativeSrc": "667:50:5",
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nativeSrc": "664:70:5",
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:5",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:5",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nativeSrc": "832:167:5",
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:5",
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nativeSrc": "880:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nativeSrc": "880:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nativeSrc": "849:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nativeSrc": "845:32:5",
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nativeSrc": "842:52:5",
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nativeSrc": "903:39:5",
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nativeSrc": "913:29:5",
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nativeSrc": "951:42:5",
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:5",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nativeSrc": "974:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nativeSrc": "961:32:5",
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:5",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:5",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:5",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:5",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nativeSrc": "1099:92:5",
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nativeSrc": "1109:26:5",
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nativeSrc": "1117:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nativeSrc": "1169:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nativeSrc": "1162:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nativeSrc": "1144:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nativeSrc": "1144:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:5",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:5",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:5",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nativeSrc": "1297:76:5",
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nativeSrc": "1307:26:5",
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nativeSrc": "1315:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nativeSrc": "1342:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nativeSrc": "1342:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:5",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:5",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:5",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nativeSrc": "1482:224:5",
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:5",
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nativeSrc": "1530:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nativeSrc": "1530:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nativeSrc": "1499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nativeSrc": "1495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nativeSrc": "1492:52:5",
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nativeSrc": "1553:39:5",
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nativeSrc": "1563:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nativeSrc": "1601:48:5",
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nativeSrc": "1630:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nativeSrc": "1611:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:42:5",
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nativeSrc": "1681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nativeSrc": "1668:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:5",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:5",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:5",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:5",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:5",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nativeSrc": "1808:87:5",
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nativeSrc": "1818:26:5",
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nativeSrc": "1826:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nativeSrc": "1871:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nativeSrc": "1853:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:5",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:5",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:5",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nativeSrc": "1970:116:5",
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:5",
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nativeSrc": "2018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nativeSrc": "2018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nativeSrc": "1987:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nativeSrc": "1983:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nativeSrc": "1980:52:5",
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nativeSrc": "2041:39:5",
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nativeSrc": "2051:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:5",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:5",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:5",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nativeSrc": "2161:110:5",
													"nodeType": "YulBlock",
													"src": "2161:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2207:16:5",
																"nodeType": "YulBlock",
																"src": "2207:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2219:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2219:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2209:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2209:6:5"
																			},
																			"nativeSrc": "2209:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2209:12:5"
																		},
																		"nativeSrc": "2209:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2182:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2191:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2178:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:5"
																		},
																		"nativeSrc": "2178:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2178:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2203:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2174:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:5"
																},
																"nativeSrc": "2174:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2174:32:5"
															},
															"nativeSrc": "2171:52:5",
															"nodeType": "YulIf",
															"src": "2171:52:5"
														},
														{
															"nativeSrc": "2232:33:5",
															"nodeType": "YulAssignment",
															"src": "2232:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2242:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2242:12:5"
																},
																"nativeSrc": "2242:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2242:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2091:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2127:9:5",
														"nodeType": "YulTypedName",
														"src": "2127:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2138:7:5",
														"nodeType": "YulTypedName",
														"src": "2138:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2150:6:5",
														"nodeType": "YulTypedName",
														"src": "2150:6:5",
														"type": ""
													}
												],
												"src": "2091:180:5"
											},
											{
												"body": {
													"nativeSrc": "2363:173:5",
													"nodeType": "YulBlock",
													"src": "2363:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2409:16:5",
																"nodeType": "YulBlock",
																"src": "2409:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2418:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2411:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:5"
																			},
																			"nativeSrc": "2411:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:5"
																		},
																		"nativeSrc": "2411:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2384:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2393:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2380:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:5"
																		},
																		"nativeSrc": "2380:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:5"
																},
																"nativeSrc": "2376:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2376:32:5"
															},
															"nativeSrc": "2373:52:5",
															"nodeType": "YulIf",
															"src": "2373:52:5"
														},
														{
															"nativeSrc": "2434:39:5",
															"nodeType": "YulAssignment",
															"src": "2434:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2444:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2444:18:5"
																},
																"nativeSrc": "2444:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2444:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2434:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:5"
																}
															]
														},
														{
															"nativeSrc": "2482:48:5",
															"nodeType": "YulAssignment",
															"src": "2482:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2515:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2515:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2526:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2526:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2511:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:5"
																		},
																		"nativeSrc": "2511:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2511:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2492:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2492:18:5"
																},
																"nativeSrc": "2492:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2492:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2482:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2276:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2321:9:5",
														"nodeType": "YulTypedName",
														"src": "2321:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2332:7:5",
														"nodeType": "YulTypedName",
														"src": "2332:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2344:6:5",
														"nodeType": "YulTypedName",
														"src": "2344:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2352:6:5",
														"nodeType": "YulTypedName",
														"src": "2352:6:5",
														"type": ""
													}
												],
												"src": "2276:260:5"
											},
											{
												"body": {
													"nativeSrc": "2596:325:5",
													"nodeType": "YulBlock",
													"src": "2596:325:5",
													"statements": [
														{
															"nativeSrc": "2606:22:5",
															"nodeType": "YulAssignment",
															"src": "2606:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2620:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2620:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2623:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2623:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2616:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:5"
																},
																"nativeSrc": "2616:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2616:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2606:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:5"
																}
															]
														},
														{
															"nativeSrc": "2637:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2637:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2667:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2667:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2673:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:5"
																},
																"nativeSrc": "2663:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2663:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2641:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2641:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2714:31:5",
																"nodeType": "YulBlock",
																"src": "2714:31:5",
																"statements": [
																	{
																		"nativeSrc": "2716:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2716:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2730:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2730:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2738:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2738:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2726:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2726:3:5"
																			},
																			"nativeSrc": "2726:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2726:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2716:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2694:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2694:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:5"
																},
																"nativeSrc": "2687:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2687:26:5"
															},
															"nativeSrc": "2684:61:5",
															"nodeType": "YulIf",
															"src": "2684:61:5"
														},
														{
															"body": {
																"nativeSrc": "2804:111:5",
																"nodeType": "YulBlock",
																"src": "2804:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2825:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2825:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2832:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2832:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2837:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2837:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2828:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2828:3:5"
																					},
																					"nativeSrc": "2828:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2828:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2818:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:5"
																			},
																			"nativeSrc": "2818:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2818:31:5"
																		},
																		"nativeSrc": "2818:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2872:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2862:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:5"
																			},
																			"nativeSrc": "2862:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:15:5"
																		},
																		"nativeSrc": "2862:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2897:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2900:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2900:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2890:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:5"
																			},
																			"nativeSrc": "2890:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2890:15:5"
																		},
																		"nativeSrc": "2890:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2760:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2760:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2783:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2791:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2780:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2780:2:5"
																		},
																		"nativeSrc": "2780:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2757:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2757:2:5"
																},
																"nativeSrc": "2757:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2757:38:5"
															},
															"nativeSrc": "2754:161:5",
															"nodeType": "YulIf",
															"src": "2754:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2541:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2576:4:5",
														"nodeType": "YulTypedName",
														"src": "2576:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2585:6:5",
														"nodeType": "YulTypedName",
														"src": "2585:6:5",
														"type": ""
													}
												],
												"src": "2541:380:5"
											},
											{
												"body": {
													"nativeSrc": "2974:174:5",
													"nodeType": "YulBlock",
													"src": "2974:174:5",
													"statements": [
														{
															"nativeSrc": "2984:16:5",
															"nodeType": "YulAssignment",
															"src": "2984:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2995:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2995:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2998:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2998:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2991:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:5"
																},
																"nativeSrc": "2991:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2991:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2984:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2984:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3031:111:5",
																"nodeType": "YulBlock",
																"src": "3031:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3059:3:5",
																							"nodeType": "YulLiteral",
																							"src": "3059:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3064:10:5",
																							"nodeType": "YulLiteral",
																							"src": "3064:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3055:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3055:3:5"
																					},
																					"nativeSrc": "3055:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3055:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3045:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:5"
																			},
																			"nativeSrc": "3045:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:31:5"
																		},
																		"nativeSrc": "3045:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3099:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3089:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:5"
																			},
																			"nativeSrc": "3089:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:15:5"
																		},
																		"nativeSrc": "3089:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3124:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3127:4:5",
																					"nodeType": "YulLiteral",
																					"src": "3127:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3117:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:5"
																			},
																			"nativeSrc": "3117:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3117:15:5"
																		},
																		"nativeSrc": "3117:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3015:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3015:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3018:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3018:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3012:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3012:2:5"
																},
																"nativeSrc": "3012:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3012:10:5"
															},
															"nativeSrc": "3009:133:5",
															"nodeType": "YulIf",
															"src": "3009:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2926:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2957:1:5",
														"nodeType": "YulTypedName",
														"src": "2957:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2960:1:5",
														"nodeType": "YulTypedName",
														"src": "2960:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2966:3:5",
														"nodeType": "YulTypedName",
														"src": "2966:3:5",
														"type": ""
													}
												],
												"src": "2926:222:5"
											},
											{
												"body": {
													"nativeSrc": "3327:227:5",
													"nodeType": "YulBlock",
													"src": "3327:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3337:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:5"
																},
																"nativeSrc": "3337:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3337:21:5"
															},
															"nativeSrc": "3337:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3337:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3378:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3378:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3389:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3389:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3374:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:5"
																		},
																		"nativeSrc": "3374:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3394:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3394:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3367:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3367:6:5"
																},
																"nativeSrc": "3367:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3367:30:5"
															},
															"nativeSrc": "3367:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3367:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3417:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3417:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3428:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3428:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3413:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:5"
																		},
																		"nativeSrc": "3413:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3413:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3433:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3433:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3406:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:5"
																},
																"nativeSrc": "3406:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3406:62:5"
															},
															"nativeSrc": "3406:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3406:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3488:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3499:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3499:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3484:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:5"
																		},
																		"nativeSrc": "3484:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3484:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3504:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3504:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3477:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:5"
																},
																"nativeSrc": "3477:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3477:35:5"
															},
															"nativeSrc": "3477:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3477:35:5"
														},
														{
															"nativeSrc": "3521:27:5",
															"nodeType": "YulAssignment",
															"src": "3521:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3533:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3533:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3544:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3544:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3529:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3529:3:5"
																},
																"nativeSrc": "3529:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3529:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3521:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3521:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3153:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3304:9:5",
														"nodeType": "YulTypedName",
														"src": "3304:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3318:4:5",
														"nodeType": "YulTypedName",
														"src": "3318:4:5",
														"type": ""
													}
												],
												"src": "3153:401:5"
											},
											{
												"body": {
													"nativeSrc": "3733:226:5",
													"nodeType": "YulBlock",
													"src": "3733:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3750:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3750:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3761:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3761:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3743:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:5"
																},
																"nativeSrc": "3743:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3743:21:5"
															},
															"nativeSrc": "3743:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3743:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3784:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3784:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3795:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3795:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3780:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:5"
																		},
																		"nativeSrc": "3780:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3780:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3800:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3800:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3773:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:5"
																},
																"nativeSrc": "3773:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3773:30:5"
															},
															"nativeSrc": "3773:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3773:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3823:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3823:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3834:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3834:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3819:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:5"
																		},
																		"nativeSrc": "3819:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3819:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3839:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3839:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3812:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:5"
																},
																"nativeSrc": "3812:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3812:62:5"
															},
															"nativeSrc": "3812:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3812:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3894:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3894:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3905:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3890:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3890:3:5"
																		},
																		"nativeSrc": "3890:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3910:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3910:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3883:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:5"
																},
																"nativeSrc": "3883:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3883:34:5"
															},
															"nativeSrc": "3883:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3883:34:5"
														},
														{
															"nativeSrc": "3926:27:5",
															"nodeType": "YulAssignment",
															"src": "3926:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3938:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3938:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3949:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3949:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3934:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:5"
																},
																"nativeSrc": "3934:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3934:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3926:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3926:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3559:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3710:9:5",
														"nodeType": "YulTypedName",
														"src": "3710:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3724:4:5",
														"nodeType": "YulTypedName",
														"src": "3724:4:5",
														"type": ""
													}
												],
												"src": "3559:400:5"
											},
											{
												"body": {
													"nativeSrc": "4138:224:5",
													"nodeType": "YulBlock",
													"src": "4138:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4155:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4155:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4148:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:5"
																},
																"nativeSrc": "4148:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4148:21:5"
															},
															"nativeSrc": "4148:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4148:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4189:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4189:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4200:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4200:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4185:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4185:3:5"
																		},
																		"nativeSrc": "4185:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4205:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4205:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4178:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4178:6:5"
																},
																"nativeSrc": "4178:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4178:30:5"
															},
															"nativeSrc": "4178:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4178:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4228:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4228:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4239:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4239:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4224:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4224:3:5"
																		},
																		"nativeSrc": "4224:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4244:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4244:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4217:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:5"
																},
																"nativeSrc": "4217:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4217:62:5"
															},
															"nativeSrc": "4217:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4217:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4299:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4310:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4295:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:5"
																		},
																		"nativeSrc": "4295:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4295:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4315:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4315:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4288:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:5"
																},
																"nativeSrc": "4288:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4288:32:5"
															},
															"nativeSrc": "4288:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4288:32:5"
														},
														{
															"nativeSrc": "4329:27:5",
															"nodeType": "YulAssignment",
															"src": "4329:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4341:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4341:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4352:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4337:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:5"
																},
																"nativeSrc": "4337:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4337:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4329:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4329:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3964:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4115:9:5",
														"nodeType": "YulTypedName",
														"src": "4115:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4129:4:5",
														"nodeType": "YulTypedName",
														"src": "4129:4:5",
														"type": ""
													}
												],
												"src": "3964:398:5"
											},
											{
												"body": {
													"nativeSrc": "4541:179:5",
													"nodeType": "YulBlock",
													"src": "4541:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4558:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4558:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4569:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4569:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4551:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:5"
																},
																"nativeSrc": "4551:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4551:21:5"
															},
															"nativeSrc": "4551:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4551:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4592:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4592:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4603:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4603:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4588:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4588:3:5"
																		},
																		"nativeSrc": "4588:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4588:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4608:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4581:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:5"
																},
																"nativeSrc": "4581:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4581:30:5"
															},
															"nativeSrc": "4581:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4581:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4631:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4631:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4642:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4642:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4627:3:5"
																		},
																		"nativeSrc": "4627:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4627:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4647:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4647:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4620:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:5"
																},
																"nativeSrc": "4620:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4620:59:5"
															},
															"nativeSrc": "4620:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4620:59:5"
														},
														{
															"nativeSrc": "4688:26:5",
															"nodeType": "YulAssignment",
															"src": "4688:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4700:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4700:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4711:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4711:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4696:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4696:3:5"
																},
																"nativeSrc": "4696:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4696:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4688:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4688:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4367:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4518:9:5",
														"nodeType": "YulTypedName",
														"src": "4518:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4532:4:5",
														"nodeType": "YulTypedName",
														"src": "4532:4:5",
														"type": ""
													}
												],
												"src": "4367:353:5"
											},
											{
												"body": {
													"nativeSrc": "4899:227:5",
													"nodeType": "YulBlock",
													"src": "4899:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4916:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4916:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4927:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4927:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4909:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4909:6:5"
																},
																"nativeSrc": "4909:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4909:21:5"
															},
															"nativeSrc": "4909:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4909:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4950:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4950:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4961:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4961:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4946:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4946:3:5"
																		},
																		"nativeSrc": "4946:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4966:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4966:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4939:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:5"
																},
																"nativeSrc": "4939:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4939:30:5"
															},
															"nativeSrc": "4939:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4939:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4989:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4989:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5000:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5000:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4985:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4985:3:5"
																		},
																		"nativeSrc": "4985:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4985:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5005:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5005:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4978:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4978:6:5"
																},
																"nativeSrc": "4978:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4978:62:5"
															},
															"nativeSrc": "4978:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4978:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5060:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5060:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5071:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5071:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5056:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5056:3:5"
																		},
																		"nativeSrc": "5056:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5056:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5076:7:5",
																		"nodeType": "YulLiteral",
																		"src": "5076:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5049:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:5"
																},
																"nativeSrc": "5049:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5049:35:5"
															},
															"nativeSrc": "5049:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "5049:35:5"
														},
														{
															"nativeSrc": "5093:27:5",
															"nodeType": "YulAssignment",
															"src": "5093:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5105:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5105:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5116:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5116:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5101:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5101:3:5"
																},
																"nativeSrc": "5101:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5101:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5093:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5093:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4725:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4876:9:5",
														"nodeType": "YulTypedName",
														"src": "4876:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4890:4:5",
														"nodeType": "YulTypedName",
														"src": "4890:4:5",
														"type": ""
													}
												],
												"src": "4725:401:5"
											},
											{
												"body": {
													"nativeSrc": "5305:225:5",
													"nodeType": "YulBlock",
													"src": "5305:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5322:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:5"
																},
																"nativeSrc": "5315:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5315:21:5"
															},
															"nativeSrc": "5315:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5315:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5356:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5356:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5367:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5367:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5352:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5352:3:5"
																		},
																		"nativeSrc": "5352:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5352:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5372:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5372:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:5"
																},
																"nativeSrc": "5345:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5345:30:5"
															},
															"nativeSrc": "5345:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5345:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5395:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5406:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5406:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5391:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:5"
																		},
																		"nativeSrc": "5391:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5411:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5411:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5384:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:5"
																},
																"nativeSrc": "5384:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5384:62:5"
															},
															"nativeSrc": "5384:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5384:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5466:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5466:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5477:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5477:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5462:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5462:3:5"
																		},
																		"nativeSrc": "5462:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5482:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5482:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5455:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:5"
																},
																"nativeSrc": "5455:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5455:33:5"
															},
															"nativeSrc": "5455:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5455:33:5"
														},
														{
															"nativeSrc": "5497:27:5",
															"nodeType": "YulAssignment",
															"src": "5497:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5509:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5509:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5520:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5520:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5505:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5505:3:5"
																},
																"nativeSrc": "5505:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5505:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5497:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5497:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5131:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5282:9:5",
														"nodeType": "YulTypedName",
														"src": "5282:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5296:4:5",
														"nodeType": "YulTypedName",
														"src": "5296:4:5",
														"type": ""
													}
												],
												"src": "5131:399:5"
											},
											{
												"body": {
													"nativeSrc": "5709:228:5",
													"nodeType": "YulBlock",
													"src": "5709:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5726:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5726:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5737:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5737:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5719:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:5"
																},
																"nativeSrc": "5719:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5719:21:5"
															},
															"nativeSrc": "5719:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5719:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5760:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5760:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5771:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5771:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5756:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:5"
																		},
																		"nativeSrc": "5756:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5776:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5776:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5749:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:5"
																},
																"nativeSrc": "5749:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5749:30:5"
															},
															"nativeSrc": "5749:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5749:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5799:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5799:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5810:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5810:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5795:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:5"
																		},
																		"nativeSrc": "5795:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5815:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5815:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5788:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:5"
																},
																"nativeSrc": "5788:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5788:62:5"
															},
															"nativeSrc": "5788:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5788:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5870:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5881:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5881:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5866:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:5"
																		},
																		"nativeSrc": "5866:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5866:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5886:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5886:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5859:6:5"
																},
																"nativeSrc": "5859:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5859:36:5"
															},
															"nativeSrc": "5859:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5859:36:5"
														},
														{
															"nativeSrc": "5904:27:5",
															"nodeType": "YulAssignment",
															"src": "5904:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5916:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5916:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5927:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5927:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5912:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:5"
																},
																"nativeSrc": "5912:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5912:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5904:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5904:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5535:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5686:9:5",
														"nodeType": "YulTypedName",
														"src": "5686:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5700:4:5",
														"nodeType": "YulTypedName",
														"src": "5700:4:5",
														"type": ""
													}
												],
												"src": "5535:402:5"
											},
											{
												"body": {
													"nativeSrc": "6116:181:5",
													"nodeType": "YulBlock",
													"src": "6116:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6133:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6133:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6144:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6126:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:5"
																},
																"nativeSrc": "6126:21:5",
																"nodeType": "YulFunctionCall",
																"src": "6126:21:5"
															},
															"nativeSrc": "6126:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "6126:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6167:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6178:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6163:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:5"
																		},
																		"nativeSrc": "6163:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6183:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6183:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6156:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:5"
																},
																"nativeSrc": "6156:30:5",
																"nodeType": "YulFunctionCall",
																"src": "6156:30:5"
															},
															"nativeSrc": "6156:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "6156:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6206:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6206:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6217:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6217:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6202:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:5"
																		},
																		"nativeSrc": "6202:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6202:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6222:33:5",
																		"nodeType": "YulLiteral",
																		"src": "6222:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6195:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:5"
																},
																"nativeSrc": "6195:61:5",
																"nodeType": "YulFunctionCall",
																"src": "6195:61:5"
															},
															"nativeSrc": "6195:61:5",
															"nodeType": "YulExpressionStatement",
															"src": "6195:61:5"
														},
														{
															"nativeSrc": "6265:26:5",
															"nodeType": "YulAssignment",
															"src": "6265:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6277:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6277:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6288:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6273:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6273:3:5"
																},
																"nativeSrc": "6273:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6273:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6265:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6265:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5942:355:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6093:9:5",
														"nodeType": "YulTypedName",
														"src": "6093:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6107:4:5",
														"nodeType": "YulTypedName",
														"src": "6107:4:5",
														"type": ""
													}
												],
												"src": "5942:355:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b1575f3560e01c806370a082311161006e57806370a082311461013d57806395d89b4114610165578063a0712d681461016d578063a457c2d714610182578063a9059cbb14610195578063dd62ed3e146101a8575f80fd5b806306fdde03146100b5578063095ea7b3146100d357806318160ddd146100f657806323b872dd14610108578063313ce5671461011b578063395093511461012a575b5f80fd5b6100bd6101bb565b6040516100ca9190610774565b60405180910390f35b6100e66100e13660046107db565b61024b565b60405190151581526020016100ca565b6002545b6040519081526020016100ca565b6100e6610116366004610803565b610264565b604051601281526020016100ca565b6100e66101383660046107db565b610287565b6100fa61014b36600461083c565b6001600160a01b03165f9081526020819052604090205490565b6100bd6102a8565b61018061017b36600461085c565b6102b7565b005b6100e66101903660046107db565b6102c4565b6100e66101a33660046107db565b610343565b6100fa6101b6366004610873565b610350565b6060600380546101ca906108a4565b80601f01602080910402602001604051908101604052809291908181526020018280546101f6906108a4565b80156102415780601f1061021857610100808354040283529160200191610241565b820191905f5260205f20905b81548152906001019060200180831161022457829003601f168201915b5050505050905090565b5f3361025881858561037a565b60019150505b92915050565b5f3361027185828561049d565b61027c858585610515565b506001949350505050565b5f336102588185856102998383610350565b6102a391906108dc565b61037a565b6060600480546101ca906108a4565b6102c133826106b7565b50565b5f33816102d18286610350565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61027c828686840361037a565b5f33610258818585610515565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103dc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f6104a88484610350565b90505f19811461050f57818110156105025760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b61050f848484840361037a565b50505050565b6001600160a01b0383166105795760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105db5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b0383165f90815260208190526040902054818110156106525760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361050f565b6001600160a01b03821661070d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161032d565b8060025f82825461071e91906108dc565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b5f602080835283518060208501525f5b818110156107a057858101830151858201604001528201610784565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107d6575f80fd5b919050565b5f80604083850312156107ec575f80fd5b6107f5836107c0565b946020939093013593505050565b5f805f60608486031215610815575f80fd5b61081e846107c0565b925061082c602085016107c0565b9150604084013590509250925092565b5f6020828403121561084c575f80fd5b610855826107c0565b9392505050565b5f6020828403121561086c575f80fd5b5035919050565b5f8060408385031215610884575f80fd5b61088d836107c0565b915061089b602084016107c0565b90509250929050565b600181811c908216806108b857607f821691505b6020821081036108d657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561025e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206aa5ac08cf36e39a5522fa4ae7ec977223c40de53ee0185e47ae4f58342ef50a64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x83C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x85C JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x343 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CA SWAP1 PUSH2 0x8A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F6 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x241 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x218 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x241 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x224 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x271 DUP6 DUP3 DUP6 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x27C DUP6 DUP6 DUP6 PUSH2 0x515 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x299 DUP4 DUP4 PUSH2 0x350 JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CA SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x2C1 CALLER DUP3 PUSH2 0x6B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2D1 DUP3 DUP7 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x37A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x258 DUP2 DUP6 DUP6 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A8 DUP5 DUP5 PUSH2 0x350 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x50F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST PUSH2 0x50F DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x37A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x32D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x784 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7F5 DUP4 PUSH2 0x7C0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x815 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x81E DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP3 POP PUSH2 0x82C PUSH1 0x20 DUP6 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x855 DUP3 PUSH2 0x7C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x884 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x88D DUP4 PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x89B PUSH1 0x20 DUP5 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xA5AC08CF36E39A5522FA4A 0xE7 0xEC SWAP8 PUSH19 0x23C40DE53EE0185E47AE4F58342EF50A64736F PUSH13 0x63430008170033000000000000 ",
							"sourceMap": "113:128:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4444:197:0;1004:187:5;3255:106:0;3342:12;;3255:106;;;1342:25:5;;;1330:2;1315:18;3255:106:0;1196:177:5;5203:256:0;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:5;;1841:2;1826:18;3104:91:0;1711:184:5;5854:234:0;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:0;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;162:77:4:-;;;;;;:::i;:::-;;:::i;:::-;;6575:427:0;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:3;4581:32:0;719:10:3;4597:7:0;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:3;5356:38:0;5372:4;719:10:3;5387:6:0;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:0;;5203:256;-1:-1:-1;;;;5203:256:0:o;5854:234::-;5942:4;719:10:3;5996:64:0;719:10:3;6012:7:0;6049:10;6021:25;719:10:3;6012:7:0;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;162:77:4:-;206:26;212:10;224:7;206:5;:26::i;:::-;162:77;:::o;6575:427:0:-;6668:4;719:10:3;6668:4:0;6749:25;719:10:3;6766:7:0;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:0;;3355:2:5;6784:85:0;;;3337:21:5;3394:2;3374:18;;;3367:30;3433:34;3413:18;;;3406:62;-1:-1:-1;;;3484:18:5;;;3477:35;3529:19;;6784:85:0;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:3;3873:28:0;719:10:3;3890:2:0;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:0;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:0;;10550:68;;;;-1:-1:-1;;;10550:68:0;;3761:2:5;10550:68:0;;;3743:21:5;3800:2;3780:18;;;3773:30;3839:34;3819:18;;;3812:62;-1:-1:-1;;;3890:18:5;;;3883:34;3934:19;;10550:68:0;3559:400:5;10550:68:0;-1:-1:-1;;;;;10636:21:0;;10628:68;;;;-1:-1:-1;;;10628:68:0;;4166:2:5;10628:68:0;;;4148:21:5;4205:2;4185:18;;;4178:30;4244:34;4224:18;;;4217:62;-1:-1:-1;;;4295:18:5;;;4288:32;4337:19;;10628:68:0;3964:398:5;10628:68:0;-1:-1:-1;;;;;10707:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:5;;;10758:32:0;;1315:18:5;10758:32:0;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:0;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:0;;4569:2:5;11297:68:0;;;4551:21:5;4608:2;4588:18;;;4581:30;4647:31;4627:18;;;4620:59;4696:18;;11297:68:0;4367:353:5;11297:68:0;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:0;;7544:68;;;;-1:-1:-1;;;7544:68:0;;4927:2:5;7544:68:0;;;4909:21:5;4966:2;4946:18;;;4939:30;5005:34;4985:18;;;4978:62;-1:-1:-1;;;5056:18:5;;;5049:35;5101:19;;7544:68:0;4725:401:5;7544:68:0;-1:-1:-1;;;;;7630:16:0;;7622:64;;;;-1:-1:-1;;;7622:64:0;;5333:2:5;7622:64:0;;;5315:21:5;5372:2;5352:18;;;5345:30;5411:34;5391:18;;;5384:62;-1:-1:-1;;;5462:18:5;;;5455:33;5505:19;;7622:64:0;5131:399:5;7622:64:0;-1:-1:-1;;;;;7768:15:0;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:0;;5737:2:5;7793:72:0;;;5719:21:5;5776:2;5756:18;;;5749:30;5815:34;5795:18;;;5788:62;-1:-1:-1;;;5866:18:5;;;5859:36;5912:19;;7793:72:0;5535:402:5;7793:72:0;-1:-1:-1;;;;;7899:15:0;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:5;;;8114:13:0;;8163:26;;1315:18:5;8163:26:0;;;;;;;8200:37;12073:91;8520:535;-1:-1:-1;;;;;8603:21:0;;8595:65;;;;-1:-1:-1;;;8595:65:0;;6144:2:5;8595:65:0;;;6126:21:5;6183:2;6163:18;;;6156:30;6222:33;6202:18;;;6195:61;6273:18;;8595:65:0;5942:355:5;8595:65:0;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:5;;;8952:37:0;;1315:18:5;8952:37:0;;;;;;;8520:535;;:::o;14:548:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:5;;2091:180;-1:-1:-1;2091:180:5:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;2926:222::-;2991:9;;;3012:10;;;3009:133;;;3064:10;3059:3;3055:20;3052:1;3045:31;3099:4;3096:1;3089:15;3127:4;3124:1;3117:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "470600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2537",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "50740",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26ACAFAA27A5A2A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1355"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 113,
									"end": 241,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 241,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206aa5ac08cf36e39a5522fa4ae7ec977223c40de53ee0185e47ae4f58342ef50a64736f6c63430008170033",
									".code": [
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "A0712D68"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 113,
											"end": 241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 239,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 162,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 162,
											"end": 239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 239,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 162,
											"end": 239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 206,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 212,
											"end": 222,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 224,
											"end": 231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 206,
											"end": 232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 206,
											"end": 232,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 206,
											"end": 232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 162,
											"end": 239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3337,
											"end": 3358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3397,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3529,
											"end": 3548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3953,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3934,
											"end": 3953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3559,
											"end": 3959,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4169,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4207,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4208,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3964,
											"end": 4362,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4551,
											"end": 4572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 4606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4647,
											"end": 4678,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4696,
											"end": 4714,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4367,
											"end": 4720,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 4930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4946,
											"end": 4964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4969,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5003,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 5040,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5056,
											"end": 5074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5049,
											"end": 5084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5120,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5101,
											"end": 5120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4725,
											"end": 5126,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5315,
											"end": 5336,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5374,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 5445,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5505,
											"end": 5524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5131,
											"end": 5530,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5849,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5788,
											"end": 5850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5535,
											"end": 5937,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6147,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6183,
											"end": 6185,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6186,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6255,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5942,
											"end": 6297,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 9055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2271,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2091,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2201,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2444,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2492,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2743,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2795,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2828,
											"end": 2848,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 3148,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2926,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3009,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3009,
											"end": 3142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3074,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3055,
											"end": 3075,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/USDTToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDTToken.sol\":\"MY_TOKEN\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/USDTToken.sol\":{\"keccak256\":\"0xe20fbbe59b96461e12ac3e4691d8609b10510797eec7c354984fde7bc035b525\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a52ade3a41604b67ec3a6734d726468aa0804cce28e7cc1cc8245da7fd399657\",\"dweb:/ipfs/QmXMNdvGbZHEPJ8ti5FqMbHZv4gkVrpCR8wU3GQzpJUgyF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "contracts/USDTToken.sol:MY_TOKEN",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "contracts/USDTToken.sol:MY_TOKEN",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "contracts/USDTToken.sol:MY_TOKEN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "contracts/USDTToken.sol:MY_TOKEN",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/USDTToken.sol:MY_TOKEN",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 665,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 690,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 712,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1550:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1550:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "1559:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "1567:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								689,
								664,
								711
							],
							"name": "ERC20",
							"nameLocation": "1541:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1588:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1640:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1714:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1749:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1775:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2036:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2046:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2054:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1992:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2013:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:0"
									},
									"scope": 586,
									"src": "1980:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2227:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2237:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2212:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:0"
									},
									"scope": 586,
									"src": "2158:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2440:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2450:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2425:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:0"
									},
									"scope": 586,
									"src": "2369:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3169:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3179:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3162:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:0"
									},
									"scope": 586,
									"src": "3104:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3325:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3342:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3335:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:0"
									},
									"scope": 586,
									"src": "3255:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3502:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3519:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3512:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:0"
									},
									"scope": 586,
									"src": "3419:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3825:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3835:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3851:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3883:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3890:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3911:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3758:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3770:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:0"
									},
									"scope": 586,
									"src": "3740:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4085:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4102:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4095:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4006:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:0"
									},
									"scope": 586,
									"src": "3987:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4533:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4543:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4559:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4623:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4461:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:0"
									},
									"scope": 586,
									"src": "4444:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5306:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5316:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5334:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5356:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5420:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5404:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5441:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5225:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5239:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5300:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:0"
									},
									"scope": 586,
									"src": "5203:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5948:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5958:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5974:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6031:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6038:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6021:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6049:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "5996:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6070:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5898:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:0"
									},
									"scope": 586,
									"src": "5854:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6674:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6684:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "6700:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6722:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6749:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6792:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6812:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6919:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6928:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6947:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6903:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "6984:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6619:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:0"
									},
									"scope": 586,
									"src": "6575:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7534:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7630:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7724:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7697:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7746:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7778:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7801:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7816:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7909:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7917:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7931:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8114:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8124:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8131:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8172:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8178:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8182:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8163:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8158:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8220:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8200:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7501:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:0"
									},
									"scope": 586,
									"src": "7456:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8585:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8671:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8731:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8747:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8921:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "8947:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9000:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8552:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:0"
									},
									"scope": 586,
									"src": "8520:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9440:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9528:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9588:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9649:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9667:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9746:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9756:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9767:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9784:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "9883:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9899:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9931:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "9926:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9979:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9407:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:0"
									},
									"scope": 586,
									"src": "9375:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10540:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10558:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10636:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10737:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10758:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "10753:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:0"
									},
									"scope": 586,
									"src": "10457:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11168:321:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11178:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11244:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11240:243:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11283:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11305:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11325:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11416:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11423:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11432:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11451:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11407:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11118:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:0"
									},
									"scope": 586,
									"src": "11078:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12162:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12129:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:0"
									},
									"scope": 586,
									"src": "12073:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "12840:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12795:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12807:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:0"
									},
									"scope": 586,
									"src": "12752:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1532:11312:0",
							"usedErrors": [],
							"usedEvents": [
								598,
								607
							]
						}
					],
					"src": "105:12740:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 664,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 664,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 664,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 664,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 664,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 664,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								598,
								607
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 665,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "305:6:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								664
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 689,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 689,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 689,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 690,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								598,
								607
							]
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 699,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 711,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 705,
												"id": 708,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 711,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "608:235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"contracts/USDTToken.sol": {
				"ast": {
					"absolutePath": "contracts/USDTToken.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						],
						"MY_TOKEN": [
							731
						]
					},
					"id": 732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 732,
							"sourceUnit": 587,
							"src": "57:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "4d595f544f4b454e",
											"id": 716,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "140:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_263636c51daddae3455612b1459291bbbe397a2bfefdc0d15d04fc67b6e69bd8",
												"typeString": "literal_string \"MY_TOKEN\""
											},
											"value": "MY_TOKEN"
										},
										{
											"hexValue": "4d54",
											"id": 717,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "151:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_5b3fa69ad8a0666e5be827c0e18983e3cd29364bca2f1d8ae5b20eac8ce61c0d",
												"typeString": "literal_string \"MT\""
											},
											"value": "MT"
										}
									],
									"baseName": {
										"id": 715,
										"name": "ERC20",
										"nameLocations": [
											"134:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 586,
										"src": "134:5:4"
									},
									"id": 718,
									"nodeType": "InheritanceSpecifier",
									"src": "134:22:4"
								}
							],
							"canonicalName": "MY_TOKEN",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 731,
							"linearizedBaseContracts": [
								731,
								586,
								689,
								664,
								711
							],
							"name": "MY_TOKEN",
							"nameLocation": "122:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "196:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "212:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "216:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "212:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "224:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "206:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "206:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "206:26:4"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "171:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "181:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "176:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:14:4"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:4"
									},
									"scope": 731,
									"src": "162:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 732,
							"src": "113:128:4",
							"usedErrors": [],
							"usedEvents": [
								598,
								607
							]
						}
					],
					"src": "32:209:4"
				},
				"id": 4
			}
		}
	}
}